<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="ServerService?WSDL" resourceRoot="" soapui-version="4.6.4" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServerServiceEndpointSoapBinding" type="wsdl" bindingName="{http://server.opsware.com}ServerServiceEndpointSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://owc/osapi/com/opsware/server/ServerService?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://owc/osapi/com/opsware/server/ServerService?WSDL"><con:part><con:url>https://owc/osapi/com/opsware/server/ServerService?WSDL</con:url><con:content><![CDATA[<definitions targetNamespace="http://server.opsware.com" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://server.opsware.com" xmlns:intf="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns1="http://common.opsware.com" xmlns:tns10="http://search.opsware.com" xmlns:tns11="http://mgmtservice.opsware.com" xmlns:tns12="http://acm.opsware.com" xmlns:tns13="http://sco.compliance.opsware.com" xmlns:tns14="http://custattr.opsware.com" xmlns:tns15="http://pkg.opsware.com" xmlns:tns16="http://compliance.opsware.com" xmlns:tns17="http://osprov.opsware.com" xmlns:tns18="http://windows.pkg.opsware.com" xmlns:tns19="http://hpux.pkg.opsware.com" xmlns:tns2="http://fido.opsware.com" xmlns:tns20="http://v12n.opsware.com" xmlns:tns21="http://folder.opsware.com" xmlns:tns22="http://aix.pkg.opsware.com" xmlns:tns23="http://solaris.pkg.opsware.com" xmlns:tns24="http://vmware.v12n.opsware.com" xmlns:tns25="http://nas.opsware.com" xmlns:tns26="http://mgmtservice.v12n.opsware.com" xmlns:tns27="http://apx.opsware.com" xmlns:tns28="http://microsoft.v12n.opsware.com" xmlns:tns29="http://mgmtservice.ilo.opsware.com" xmlns:tns3="http://storage.opsware.com" xmlns:tns30="http://savedsearch.opsware.com" xmlns:tns31="http://report.opsware.com" xmlns:tns32="http://script.opsware.com" xmlns:tns33="http://busapp.opsware.com" xmlns:tns34="http://reportresult.opsware.com" xmlns:tns35="http://atm.opsware.com" xmlns:tns36="http://sitemap.opsware.com" xmlns:tns37="http://policy.sco.compliance.opsware.com" xmlns:tns38="http://args.fido.opsware.com" xmlns:tns39="http://apx.fido.opsware.com" xmlns:tns4="http://locality.opsware.com" xmlns:tns5="http://device.opsware.com" xmlns:tns6="http://smo.opsware.com" xmlns:tns7="http://job.opsware.com" xmlns:tns8="http://swmgmt.opsware.com" xmlns:tns9="http://virtualization.opsware.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <schema targetNamespace="http://common.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType abstract="true" name="ObjRef">
        <sequence>
          <element name="id" type="xsd:long"/>
          <element name="idAsLong" nillable="true" type="soapenc:long"/>
          <element name="name" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="Message">
        <sequence>
          <element name="errorId" nillable="true" type="soapenc:string"/>
          <element name="errorIdFromUtil" nillable="true" type="soapenc:string"/>
          <element name="errorParamsFromUtil" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <element name="key" nillable="true" type="soapenc:string"/>
          <element name="messageFormat" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType abstract="true" name="OpswareException">
        <sequence>
          <element name="exceptionTime" nillable="true" type="xsd:dateTime"/>
          <element name="message" nillable="true" type="soapenc:string"/>
          <element name="messageDef" nillable="true" type="tns1:Message"/>
          <element name="messageParams" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
        </sequence>
      </complexType>
      <complexType abstract="true" name="ConstraintException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotFoundException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="objects" nillable="true" type="impl:ArrayOf_tns1_ObjRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="BaseVO">
        <sequence>
          <element name="ref" nillable="true" type="tns1:ObjRef"/>
        </sequence>
      </complexType>
      <complexType name="LegacyException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence>
              <element name="date" nillable="true" type="xsd:dateTime"/>
              <element name="hostname" nillable="true" type="soapenc:string"/>
              <element name="legacyErrorCode" nillable="true" type="soapenc:string"/>
              <element name="line" type="xsd:int"/>
              <element name="method" nillable="true" type="soapenc:string"/>
              <element name="module" nillable="true" type="soapenc:string"/>
              <element name="paramKeys" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="paramValues" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="request" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="CreatorVO">
        <complexContent>
          <extension base="tns1:BaseVO">
            <sequence>
              <element name="createdBy" nillable="true" type="soapenc:string"/>
              <element name="createdDate" nillable="true" type="xsd:dateTime"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="ModifiableVO">
        <complexContent>
          <extension base="tns1:CreatorVO">
            <sequence>
              <element name="dirtyAttributes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="logChange" type="xsd:boolean"/>
              <element name="modifiedBy" nillable="true" type="soapenc:string"/>
              <element name="modifiedDate" nillable="true" type="xsd:dateTime"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="IllegalValueException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="fieldName" nillable="true" type="soapenc:string"/>
              <element name="fieldValue" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingRequiredFieldException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="fieldName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ReadOnlyException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="fieldName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ModifiedException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence>
              <element name="lastModifiedTime" nillable="true" type="xsd:dateTime"/>
              <element name="lastModifyingUsername" nillable="true" type="soapenc:string"/>
              <element name="object" nillable="true" type="tns1:ObjRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ModifiableMap">
        <sequence>
          <element name="dirtyAttributes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <element name="empty" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <complexType name="NoChangeRequestedException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidTypeException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="validTypes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ChangeLogEntry">
        <sequence>
          <element name="date" nillable="true" type="xsd:dateTime"/>
          <element name="summary" nillable="true" type="soapenc:string"/>
          <element name="user" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PermissionChangeRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AgentlessServerException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MaximumLengthExceededException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="maxLength" type="xsd:int"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ReadOnlyFolderNamespaceException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="namespace" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InUseException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="reason" nillable="true" type="soapenc:string"/>
              <element name="targets" nillable="true" type="impl:ArrayOf_tns1_ObjRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CircularException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="objects" nillable="true" type="impl:ArrayOf_tns1_ObjRef"/>
              <element name="reason" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueNameException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="fieldName" nillable="true" type="soapenc:string"/>
              <element name="fieldValue" nillable="true" type="xsd:anyType"/>
              <element name="object" nillable="true" type="tns1:ObjRef"/>
              <element name="offendingObject" nillable="true" type="tns1:ObjRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NamedEventDetail">
        <sequence>
          <element name="key" nillable="true" type="soapenc:string"/>
          <element name="value" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="DetailedChangeLogEntry">
        <complexContent>
          <extension base="tns1:ChangeLogEntry">
            <sequence>
              <element name="description" nillable="true" type="soapenc:string"/>
              <element name="details" nillable="true" type="impl:ArrayOf_tns1_NamedEventDetail"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://server.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ServerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_soapenc_string">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_xsd_anyType">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:anyType[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns1_ObjRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns1:ObjRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="AgentCryptoInfoVO">
        <complexContent>
          <extension base="tns1:BaseVO">
            <sequence>
              <element name="allowRecert" type="xsd:boolean"/>
              <element name="cert1Date" nillable="true" type="xsd:dateTime"/>
              <element name="cert2Date" nillable="true" type="xsd:dateTime"/>
              <element name="certExpiryDate" nillable="true" type="xsd:dateTime"/>
              <element name="certSubjectCN" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns5_DeviceGroupRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns5:DeviceGroupRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns6_ServerModuleRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns6:ServerModuleRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfServerRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:ServerRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="HWComponent">
        <sequence>
          <element name="beginDate" nillable="true" type="xsd:dateTime"/>
          <element name="id" type="xsd:long"/>
          <element name="vendor" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="BusComponent">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="busDvcId" nillable="true" type="soapenc:string"/>
              <element name="busId" nillable="true" type="soapenc:string"/>
              <element name="clss" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
              <element name="version" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfBusComponent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:BusComponent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="CPUComponent">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="cacheSize" nillable="true" type="soapenc:string"/>
              <element name="family" nillable="true" type="soapenc:string"/>
              <element name="model" nillable="true" type="soapenc:string"/>
              <element name="slot" nillable="true" type="soapenc:string"/>
              <element name="speed" nillable="true" type="soapenc:string"/>
              <element name="status" nillable="true" type="soapenc:string"/>
              <element name="stepping" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfCPUComponent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:CPUComponent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="InterfaceComponent">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="adminEnabled" type="xsd:boolean"/>
              <element name="collisions" nillable="true" type="soapenc:string"/>
              <element name="configuredDuplex" nillable="true" type="soapenc:string"/>
              <element name="configuredSpeed" nillable="true" type="soapenc:string"/>
              <element name="connectedTo" nillable="true" type="tns1:ObjRef"/>
              <element name="descriptor" nillable="true" type="soapenc:string"/>
              <element name="duplex" nillable="true" type="soapenc:string"/>
              <element name="enabled" type="xsd:boolean"/>
              <element name="hardwareAddress" nillable="true" type="soapenc:string"/>
              <element name="ipAddress" nillable="true" type="soapenc:string"/>
              <element name="localHostName" nillable="true" type="soapenc:string"/>
              <element name="netmask" nillable="true" type="soapenc:string"/>
              <element name="primaryInterface" type="xsd:boolean"/>
              <element name="slot" nillable="true" type="soapenc:string"/>
              <element name="speed" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
              <element name="useDHCP" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfInterfaceComponent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:InterfaceComponent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="MemoryComponent">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="quantity" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfMemoryComponent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:MemoryComponent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ServerHWLocation">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="bay" nillable="true" type="soapenc:string"/>
              <element name="enclosure" nillable="true" type="soapenc:string"/>
              <element name="rack" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageComponent">
        <complexContent>
          <extension base="impl:HWComponent">
            <sequence>
              <element name="capacity" nillable="true" type="soapenc:string"/>
              <element name="drive" nillable="true" type="soapenc:string"/>
              <element name="media" nillable="true" type="soapenc:string"/>
              <element name="model" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfStorageComponent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:StorageComponent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ServerHardwareVO">
        <complexContent>
          <extension base="tns5:DeviceHardwareVO">
            <sequence>
              <element name="assetTag" nillable="true" type="soapenc:string"/>
              <element name="beginDate" nillable="true" type="xsd:dateTime"/>
              <element name="buses" nillable="true" type="impl:ArrayOfBusComponent"/>
              <element name="chassisId" nillable="true" type="soapenc:string"/>
              <element name="cpus" nillable="true" type="impl:ArrayOfCPUComponent"/>
              <element name="hwSignature" nillable="true" type="soapenc:string"/>
              <element name="interfaces" nillable="true" type="impl:ArrayOfInterfaceComponent"/>
              <element name="manufacturer" nillable="true" type="soapenc:string"/>
              <element name="memories" nillable="true" type="impl:ArrayOfMemoryComponent"/>
              <element name="model" nillable="true" type="soapenc:string"/>
              <element name="serialNumber" nillable="true" type="soapenc:string"/>
              <element name="serverHwLocation" nillable="true" type="impl:ServerHWLocation"/>
              <element name="storages" nillable="true" type="impl:ArrayOfStorageComponent"/>
              <element name="uuid" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfServerHardwareVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:ServerHardwareVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="InstalledService">
        <sequence>
          <element name="name" nillable="true" type="soapenc:string"/>
          <element name="status" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfInstalledService">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:InstalledService[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns8_RollbackPointVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns8:RollbackPointVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ServerStage">
        <sequence>
          <element name="description" nillable="true" type="soapenc:string"/>
          <element name="displayName" nillable="true" type="soapenc:string"/>
          <element name="stage" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfServerStage">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:ServerStage[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_PortRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:PortRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_PhysicalDiskRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:PhysicalDiskRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_ProtocolControllerRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:ProtocolControllerRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns9_VirtualServerRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns9:VirtualServerRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="LockInfo">
        <sequence>
          <element name="comment" nillable="true" type="soapenc:string"/>
          <element name="date" nillable="true" type="xsd:dateTime"/>
          <element name="locked" type="xsd:boolean"/>
          <element name="user" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ServerVO">
        <complexContent>
          <extension base="tns5:DeviceVO">
            <sequence>
              <element name="agentVersion" nillable="true" type="soapenc:string"/>
              <element name="codeset" nillable="true" type="soapenc:string"/>
              <element name="customer" nillable="true" type="tns4:CustomerRef"/>
              <element name="defaultGw" nillable="true" type="soapenc:string"/>
              <element name="discoveredDate" nillable="true" type="xsd:dateTime"/>
              <element name="facility" nillable="true" type="tns4:FacilityRef"/>
              <element name="firstDetectDate" nillable="true" type="xsd:dateTime"/>
              <element name="hypervisor" type="xsd:boolean"/>
              <element name="lastScanDate" nillable="true" type="xsd:dateTime"/>
              <element name="locale" nillable="true" type="soapenc:string"/>
              <element name="lockInfo" nillable="true" type="impl:LockInfo"/>
              <element name="loopbackIP" nillable="true" type="soapenc:string"/>
              <element name="managementIP" nillable="true" type="soapenc:string"/>
              <element name="mid" nillable="true" type="soapenc:string"/>
              <element name="name" nillable="true" type="soapenc:string"/>
              <element name="netBIOSName" nillable="true" type="soapenc:string"/>
              <element name="opswLifecycle" nillable="true" type="soapenc:string"/>
              <element name="origin" nillable="true" type="soapenc:string"/>
              <element name="osFlavor" nillable="true" type="soapenc:string"/>
              <element name="osSPVersion" nillable="true" type="soapenc:string"/>
              <element name="peerIP" nillable="true" type="soapenc:string"/>
              <element name="platform" nillable="true" type="tns5:PlatformRef"/>
              <element name="powerState" nillable="true" type="soapenc:long"/>
              <element name="previousSWRegDate" nillable="true" type="xsd:dateTime"/>
              <element name="realm" nillable="true" type="tns4:RealmRef"/>
              <element name="rebootRequired" type="xsd:boolean"/>
              <element name="reporting" type="xsd:boolean"/>
              <element name="stage" nillable="true" type="soapenc:string"/>
              <element name="state" nillable="true" type="soapenc:string"/>
              <element name="use" nillable="true" type="soapenc:string"/>
              <element name="virtualizationType" nillable="true" type="soapenc:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InstalledSoftware">
        <sequence>
          <element name="beginDate" nillable="true" type="xsd:dateTime"/>
          <element name="displayName" nillable="true" type="soapenc:string"/>
          <element name="name" nillable="true" type="soapenc:string"/>
          <element name="packageName" nillable="true" type="soapenc:string"/>
          <element name="release" nillable="true" type="soapenc:string"/>
          <element name="status" nillable="true" type="soapenc:string"/>
          <element name="type" nillable="true" type="soapenc:string"/>
          <element name="uninstallable" type="xsd:boolean"/>
          <element name="version" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfInstalledSoftware">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:InstalledSoftware[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_AgentRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:AgentRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ServerUse">
        <sequence>
          <element name="description" nillable="true" type="soapenc:string"/>
          <element name="displayName" nillable="true" type="soapenc:string"/>
          <element name="use" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfServerUse">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:ServerUse[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfServerVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:ServerVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfAgentCryptoInfoVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:AgentCryptoInfoVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="CustAttrValue">
        <sequence>
          <element name="id" type="xsd:long"/>
          <element name="scope" nillable="true" type="soapenc:string"/>
          <element name="value" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfCustAttrValue">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:CustAttrValue[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="CustAttrDetail">
        <sequence>
          <element name="key" nillable="true" type="soapenc:string"/>
          <element name="values" nillable="true" type="impl:ArrayOfCustAttrValue"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfCustAttrDetail">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:CustAttrDetail[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="CustAttrDetailList">
        <sequence>
          <element name="attrDetails" nillable="true" type="impl:ArrayOfCustAttrDetail"/>
          <element name="server" nillable="true" type="impl:ServerRef"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOfCustAttrDetailList">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="impl:CustAttrDetailList[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns11_ManagerRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns11:ManagerRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns13_SCOPolicy">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns13:SCOPolicy[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns13_SnapshotResultVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns13:SnapshotResultVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns12_ApplicationInstanceVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns12:ApplicationInstanceVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns14_VirtualColumnRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns14:VirtualColumnRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns16_DashboardTestResult">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns16:DashboardTestResult[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns16_DashboardTestRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns16:DashboardTestRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOfArrayOf_tns16_DashboardTestResult">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns16:DashboardTestResult[][]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns12_ConfigBackupContent">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns12:ConfigBackupContent[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns12_ConfigBackupVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns12:ConfigBackupVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns12_ConfigurableVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns12:ConfigurableVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns7_ScheduledJobRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns7:ScheduledJobRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns1_ChangeLogEntry">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns1:ChangeLogEntry[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns8_SoftwarePolicyRef">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns8:SoftwarePolicyRef[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns8_PolicyAttachableState">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns8:PolicyAttachableState[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns8_PackageInfo">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns8:PackageInfo[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns8_PolicyAssociation">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns8:PolicyAssociation[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns16_ComplianceScanSummary">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns16:ComplianceScanSummary[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_LogicalVolumeTargetView">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:LogicalVolumeTargetView[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_QuotaLimit">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:QuotaLimit[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_Quota">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:Quota[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_UnmountedLogicalVolumeVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:UnmountedLogicalVolumeVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_LogicalVolumeInitiatorView">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:LogicalVolumeInitiatorView[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns3_StorageConnectionInfoVO">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:StorageConnectionInfoVO[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_RuleSourceValue">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:RuleSourceValue[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_AppConfigSubRuleElement">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:AppConfigSubRuleElement[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_AppConfigSubRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:AppConfigSubRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_FileCMLMapping">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:FileCMLMapping[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_WinServicesRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:WinServicesRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_StorageInitiatorRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:StorageInitiatorRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_StorageInventoryRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:StorageInventoryRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_RegistryRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:RegistryRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_SCOCheckRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:SCOCheckRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_NetworkDuplexRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:NetworkDuplexRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_AppConfigRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:AppConfigRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_COMPlusRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:COMPlusRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_MemoryRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:MemoryRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_MetabaseRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:MetabaseRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_FileSystemRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:FileSystemRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_CPURule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:CPURule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_StorageRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:StorageRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_ScriptOutputRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:ScriptOutputRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_SMORule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:SMORule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns37_NetworkInterfaceRule">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns37:NetworkInterfaceRule[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
      <complexType name="ArrayOf_tns1_NamedEventDetail">
        <complexContent>
          <restriction base="soapenc:Array">
            <attribute ref="soapenc:arrayType" wsdl:arrayType="tns1:NamedEventDetail[]" xmlns:wsdl1="http://schemas.xmlsoap.org/wsdl/"/>
          </restriction>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://fido.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="AuthorizationException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UserRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UserRoleRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MyUserRoleRef">
        <complexContent>
          <extension base="tns2:UserRoleRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AdminRoleRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustomerAdminRoleRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PasswordPolicyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustomerGroupRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="IllegalSecureValueException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="fieldName" nillable="true" type="soapenc:string"/>
              <element name="fieldValue" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidSecureTypeException">
        <complexContent>
          <extension base="tns2:IllegalSecureValueException">
            <sequence>
              <element name="validTypes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingResourceTypeIdException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="resourceTypeId" type="xsd:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuthorizationDeniedException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="operation" nillable="true" type="soapenc:string"/>
              <element name="secureReferences" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuthenticationException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="username" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TokenRenewException">
        <complexContent>
          <extension base="tns2:AuthenticationException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="token" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingResourceTypeException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="resourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BadResourceTypeNameException">
        <complexContent>
          <extension base="tns2:MissingResourceTypeException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidUserNameException">
        <complexContent>
          <extension base="tns2:AuthenticationException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingBaseResourceTypeIdException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="resourceTypeId" type="xsd:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UserNotFoundException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="userId" type="xsd:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FidoUnavailableException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingPermissionsException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="SQL" nillable="true" type="soapenc:string"/>
              <element name="userId" type="xsd:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingActionRoleException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="actionRoleId" type="xsd:long"/>
              <element name="actionRoleName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TablePermissionsMissingException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="SQL" nillable="true" type="soapenc:string"/>
              <element name="resourceTypes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LogoutException">
        <complexContent>
          <extension base="tns2:AuthenticationException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="token" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DutyConstraintException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="userId" type="xsd:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotFoundSecureValueException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="secureReferences" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MissingOperationException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="operationId" type="xsd:long"/>
              <element name="operationName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidTokenException">
        <complexContent>
          <extension base="tns2:AuthenticationException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="token" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BadResourceTypeIdException">
        <complexContent>
          <extension base="tns2:MissingResourceTypeException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://storage.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="StorageInitiatorRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PortRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PhysicalDiskRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProtocolControllerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AgentRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MultipathRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LogicalVolumeRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageVolumeRef">
        <complexContent>
          <extension base="tns3:LogicalVolumeRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LogicalVolumeTargetView">
        <sequence>
          <element name="MPIO" nillable="true" type="tns3:MultipathRef"/>
          <element name="MPIOVersion" nillable="true" type="soapenc:string"/>
          <element name="initiatorControllerFirmware" nillable="true" type="soapenc:string"/>
          <element name="initiatorControllerRef" nillable="true" type="tns3:ProtocolControllerRef"/>
          <element name="initiatorPortFcid" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortNumber" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortPermanentAddress" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortRef" nillable="true" type="tns3:PortRef"/>
          <element name="initiatorPortState" nillable="true" type="soapenc:string"/>
          <element name="logicalVolumeRef" nillable="true" type="tns3:LogicalVolumeRef"/>
          <element name="lunId" nillable="true" type="soapenc:string"/>
          <element name="targetControllerRef" nillable="true" type="tns3:ProtocolControllerRef"/>
          <element name="targetPortFcid" nillable="true" type="soapenc:string"/>
          <element name="targetPortNumber" nillable="true" type="soapenc:string"/>
          <element name="targetPortPermanentAddress" nillable="true" type="soapenc:string"/>
          <element name="targetPortRef" nillable="true" type="tns3:PortRef"/>
          <element name="targetPortState" nillable="true" type="soapenc:string"/>
          <element name="targetRef" nillable="true" type="xsd:anyType"/>
          <element name="targetStorageDevice" nillable="true" type="xsd:anyType"/>
          <element name="targetVolumeRef" nillable="true" type="tns3:StorageVolumeRef"/>
        </sequence>
      </complexType>
      <complexType name="StorageDeviceVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="caption" nillable="true" type="soapenc:string"/>
              <element name="description" nillable="true" type="soapenc:string"/>
              <element name="freeStorageCapacity" nillable="true" type="soapenc:long"/>
              <element name="primordial" type="xsd:boolean"/>
              <element name="status" nillable="true" type="soapenc:string"/>
              <element name="storageCapacity" nillable="true" type="soapenc:long"/>
              <element name="storageType" nillable="true" type="soapenc:string"/>
              <element name="vendorClassName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="QuotaLimit">
        <sequence>
          <element name="hardLimitUnit" nillable="true" type="soapenc:string"/>
          <element name="hardLimitValue" nillable="true" type="soapenc:long"/>
          <element name="limitType" nillable="true" type="soapenc:string"/>
          <element name="softLimitUnit" nillable="true" type="soapenc:string"/>
          <element name="softLimitValue" nillable="true" type="soapenc:long"/>
        </sequence>
      </complexType>
      <complexType name="Quota">
        <sequence>
          <element name="caption" nillable="true" type="soapenc:string"/>
          <element name="description" nillable="true" type="soapenc:string"/>
          <element name="limits" nillable="true" type="impl:ArrayOf_tns3_QuotaLimit"/>
          <element name="type" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="VolumeGroupRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LogicalVolumeVO">
        <complexContent>
          <extension base="tns3:StorageDeviceVO">
            <sequence>
              <element name="device" nillable="true" type="xsd:anyType"/>
              <element name="quotas" nillable="true" type="impl:ArrayOf_tns3_Quota"/>
              <element name="storageServiceType" nillable="true" type="soapenc:string"/>
              <element name="volumeGroup" nillable="true" type="tns3:VolumeGroupRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnmountedLogicalVolumeVO">
        <complexContent>
          <extension base="tns3:LogicalVolumeVO">
            <sequence>
              <element name="targetDevice" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DeviceInitiatorView">
        <sequence>
          <element name="MPIO" nillable="true" type="tns3:MultipathRef"/>
          <element name="MPIOVersion" nillable="true" type="soapenc:string"/>
          <element name="initiatorControllerFirmware" nillable="true" type="soapenc:string"/>
          <element name="initiatorControllerRef" nillable="true" type="tns3:ProtocolControllerRef"/>
          <element name="initiatorPortFcid" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortNumber" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortPermanentAddress" nillable="true" type="soapenc:string"/>
          <element name="initiatorPortRef" nillable="true" type="tns3:PortRef"/>
          <element name="initiatorPortState" nillable="true" type="soapenc:string"/>
          <element name="initiatorRef" nillable="true" type="xsd:anyType"/>
          <element name="initiatorVolumeRef" nillable="true" type="tns3:LogicalVolumeRef"/>
          <element name="lunId" nillable="true" type="soapenc:string"/>
          <element name="mounted" type="xsd:boolean"/>
          <element name="targetPortRef" nillable="true" type="tns3:PortRef"/>
        </sequence>
      </complexType>
      <complexType name="LogicalVolumeInitiatorView">
        <complexContent>
          <extension base="tns3:DeviceInitiatorView">
            <sequence>
              <element name="logicalVolume" nillable="true" type="tns3:LogicalVolumeRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConnectionInfoTemplate">
        <sequence>
          <element name="text" nillable="true" type="soapenc:string"/>
          <element name="type" nillable="true" type="soapenc:string"/>
          <element name="version" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="StorageConnectionInfoVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="template" nillable="true" type="tns3:ConnectionInfoTemplate"/>
              <element name="values" nillable="true" type="tns1:ModifiableMap"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageConnectionInfoRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DatabaseManagerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConnectionRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SwitchRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileSystemRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageSystemRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageDeviceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="VolumeManagerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="DatabaseStorageRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileManagerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnmanagedStorageDeviceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RemoteFileSystemRef">
        <complexContent>
          <extension base="tns3:FileSystemRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ZoneSetRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ZoneAliasRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkShareRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StoragePoolRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ZoneRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AdminDomainRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LocalFileSystemRef">
        <complexContent>
          <extension base="tns3:FileSystemRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DatabaseLogicalStorageRef">
        <complexContent>
          <extension base="tns3:DatabaseStorageRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnmountedLogicalVolumeRef">
        <complexContent>
          <extension base="tns3:LogicalVolumeRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DatabasePhysicalStorageRef">
        <complexContent>
          <extension base="tns3:DatabaseStorageRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetAppQuota">
        <complexContent>
          <extension base="tns3:Quota">
            <sequence>
              <element name="qtree" nillable="true" type="soapenc:string"/>
              <element name="quotaTarget" nillable="true" type="soapenc:string"/>
              <element name="spaceThreshold" nillable="true" type="soapenc:long"/>
              <element name="spaceThresholdUnit" nillable="true" type="soapenc:string"/>
              <element name="unixId" nillable="true" type="soapenc:string"/>
              <element name="windowsId" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ResultNotFoundException">
        <complexContent>
          <extension base="tns1:NotFoundException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotStorageInitiatorException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="storageInitiator" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotStorageTargetException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="storageTarget" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://locality.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="CustomerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FacilityRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RealmRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://device.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="DeviceGroupRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="DeviceHardwareVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="DeviceVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="description" nillable="true" type="soapenc:string"/>
              <element name="hostName" nillable="true" type="soapenc:string"/>
              <element name="manufacturer" nillable="true" type="soapenc:string"/>
              <element name="model" nillable="true" type="soapenc:string"/>
              <element name="osVersion" nillable="true" type="soapenc:string"/>
              <element name="primaryIP" nillable="true" type="soapenc:string"/>
              <element name="serialNumber" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PlatformRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="IllegalNegativeOperationException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://smo.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ServerModuleRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://job.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="JobRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="JobException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="JobNotification">
        <sequence>
          <element name="onCancelOwner" nillable="true" type="soapenc:string"/>
          <element name="onCancelRecipients" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <element name="onFailureOwner" nillable="true" type="soapenc:string"/>
          <element name="onFailureRecipients" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <element name="onSuccessOwner" nillable="true" type="soapenc:string"/>
          <element name="onSuccessRecipients" nillable="true" type="impl:ArrayOf_soapenc_string"/>
        </sequence>
      </complexType>
      <complexType name="JobSchedule">
        <sequence>
          <element name="startDate" nillable="true" type="xsd:dateTime"/>
        </sequence>
      </complexType>
      <complexType name="ScheduledJobRef">
        <complexContent>
          <extension base="tns7:JobRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RecurringJobRef">
        <complexContent>
          <extension base="tns7:ScheduledJobRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="TaskRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnknownJobTypeException">
        <complexContent>
          <extension base="tns7:JobException">
            <sequence>
              <element name="job" nillable="true" type="tns7:JobRef"/>
              <element name="jobType" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="JobIsScheduledException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="job" nillable="true" type="tns7:JobRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RecurringJobSchedule">
        <complexContent>
          <extension base="tns7:JobSchedule">
            <sequence>
              <element name="cronSpec" nillable="true" type="soapenc:string"/>
              <element name="endDate" nillable="true" type="xsd:dateTime"/>
              <element name="timezone" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="IllegalScheduleException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="reason" nillable="true" type="soapenc:string"/>
              <element name="schedule" nillable="true" type="tns7:JobSchedule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PastScheduledDateException">
        <complexContent>
          <extension base="tns7:IllegalScheduleException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://swmgmt.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="RollbackPointVO">
        <complexContent>
          <extension base="tns1:CreatorVO">
            <sequence>
              <element name="name" nillable="true" type="soapenc:string"/>
              <element name="tag" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoftwarePolicyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidTemplateUseException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="reason" nillable="true" type="soapenc:string"/>
              <element name="softwarePolicyRefs" nillable="true" type="impl:ArrayOf_tns8_SoftwarePolicyRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PolicyAssociation">
        <sequence>
          <element name="attached" type="xsd:boolean"/>
          <element name="deviceGroups" nillable="true" type="impl:ArrayOf_tns5_DeviceGroupRef"/>
          <element name="direct" type="xsd:boolean"/>
          <element name="policy" nillable="true" type="xsd:anyType"/>
          <element name="remediated" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <complexType name="PolicyAttachableState">
        <sequence>
          <element name="policyAssociation" nillable="true" type="tns8:PolicyAssociation"/>
          <element name="policyAttachable" nillable="true" type="xsd:anyType"/>
        </sequence>
      </complexType>
      <complexType name="PackageInfo">
        <sequence>
          <element name="displayName" nillable="true" type="soapenc:string"/>
          <element name="name" nillable="true" type="soapenc:string"/>
          <element name="packageName" nillable="true" type="soapenc:string"/>
          <element name="release" nillable="true" type="soapenc:string"/>
          <element name="type" nillable="true" type="soapenc:string"/>
          <element name="version" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PolicyOverrideRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchPolicyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WindowsPatchPolicyRef">
        <complexContent>
          <extension base="tns8:PatchPolicyRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RollbackPointRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="GenericPatchPolicyRef">
        <complexContent>
          <extension base="tns8:SoftwarePolicyRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidSoftwarePolicyItemTypeException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="items" nillable="true" type="impl:ArrayOf_tns1_ObjRef"/>
              <element name="reason" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotAttachedException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="serverRef" nillable="true" type="impl:ServerRef"/>
              <element name="softwarePolicyRefs" nillable="true" type="impl:ArrayOf_tns8_SoftwarePolicyRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AggregateSoftwarePolicyAuditResult">
        <complexContent>
          <extension base="tns16:DashboardTestResult">
            <sequence>
              <element name="failures" nillable="true" type="impl:ArrayOf_tns8_SoftwarePolicyRef"/>
              <element name="needScanning" nillable="true" type="impl:ArrayOf_tns8_SoftwarePolicyRef"/>
              <element name="scanning" nillable="true" type="impl:ArrayOf_tns8_SoftwarePolicyRef"/>
              <element name="softwarePolicyCount" type="xsd:int"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchPolicyAuditResult">
        <complexContent>
          <extension base="tns16:DashboardTestResult">
            <sequence>
              <element name="outOfComplianceCount" type="xsd:int"/>
              <element name="patchPolicyCount" type="xsd:int"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://virtualization.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="VirtualServerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="HypervisorRef">
        <complexContent>
          <extension base="impl:ServerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NotHypervisorException">
        <complexContent>
          <extension base="tns1:IllegalValueException">
            <sequence>
              <element name="serverRef" nillable="true" type="impl:ServerRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://search.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="SearchException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="Filter">
        <sequence>
          <element name="expression" nillable="true" type="soapenc:string"/>
          <element name="objectType" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="SearchRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidSearchTypeException">
        <complexContent>
          <extension base="tns10:SearchException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidSearchGrammarException">
        <complexContent>
          <extension base="tns10:SearchException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://mgmtservice.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ManagerRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="HPSAAgentRef">
        <complexContent>
          <extension base="tns11:ManagerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://sco.compliance.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType abstract="true" name="SCOPolicy">
        <sequence/>
      </complexType>
      <complexType name="AuditPolicy">
        <sequence>
          <element name="SCOPolicy" nillable="true" type="impl:ArrayOf_tns13_SCOPolicy"/>
          <element name="lastSource" nillable="true" type="xsd:anyType"/>
          <element name="policyPlatformType" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType abstract="true" name="SCOResultVO">
        <complexContent>
          <extension base="tns1:CreatorVO">
            <sequence>
              <element name="name" nillable="true" type="soapenc:string"/>
              <element name="policy" nillable="true" type="tns13:AuditPolicy"/>
              <element name="policyPlatformType" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SnapshotTaskRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SnapshotResultVO">
        <complexContent>
          <extension base="tns13:SCOResultVO">
            <sequence>
              <element name="creatorType" nillable="true" type="soapenc:string"/>
              <element name="platform" nillable="true" type="tns5:PlatformRef"/>
              <element name="referencedCount" type="xsd:long"/>
              <element name="server" nillable="true" type="impl:ServerRef"/>
              <element name="snapshotTaskRef" nillable="true" type="tns13:SnapshotTaskRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SnapshotResultRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuditExclusionRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuditResultRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SCOCheckRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuditPolicyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AuditTaskRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="SCORule">
        <sequence>
          <element name="disabled" type="xsd:boolean"/>
          <element name="ruleId" nillable="true" type="soapenc:long"/>
        </sequence>
      </complexType>
      <complexType name="BulkRemoveException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="removedRefs" nillable="true" type="impl:ArrayOf_tns1_ObjRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NoRulesInPolicyException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PolicyRequiresSourceException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PrivateAndSharedPolicySpecifiedException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RecurringAuditResult">
        <complexContent>
          <extension base="tns16:DashboardTestResult">
            <sequence>
              <element name="diffCount" type="xsd:int"/>
              <element name="job" nillable="true" type="tns7:JobRef"/>
              <element name="result" nillable="true" type="tns13:AuditResultRef"/>
              <element name="task" nillable="true" type="tns13:AuditTaskRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://acm.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ConfigurationRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ValueSet">
        <complexContent>
          <extension base="tns1:ModifiableMap">
            <sequence>
              <element name="modifiedBy" nillable="true" type="soapenc:string"/>
              <element name="modifiedDate" nillable="true" type="xsd:dateTime"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationInstanceVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="attachedGroup" nillable="true" type="tns5:DeviceGroupRef"/>
              <element name="attachedServer" nillable="true" type="impl:ServerRef"/>
              <element name="installationName" nillable="true" type="soapenc:string"/>
              <element name="requiresPush" nillable="true" type="soapenc:string"/>
              <element name="snapshots" nillable="true" type="impl:ArrayOf_tns13_SnapshotResultVO"/>
              <element name="typeId" nillable="true" type="tns12:ConfigurationRef"/>
              <element name="valueset" nillable="true" type="tns12:ValueSet"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConfigurableVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="instances" nillable="true" type="impl:ArrayOf_tns12_ApplicationInstanceVO"/>
              <element name="valueset" nillable="true" type="tns12:ValueSet"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ACException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidAppInstException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="name" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConfigBackupRef">
        <complexContent>
          <extension base="tns13:SnapshotResultRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ACInternalException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLTemplateSyntaxException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLFileParsingException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ApplicationInstanceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SpokeCommException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SpokeIOException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="opType" nillable="true" type="soapenc:string"/>
              <element name="path" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConfigBackupContent">
        <sequence>
          <element name="currentVersionContents" nillable="true" type="soapenc:string"/>
          <element name="filePath" nillable="true" type="soapenc:string"/>
          <element name="previousVersionContents" nillable="true" type="soapenc:string"/>
          <element name="updateVersionContents" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ServerUnavailableException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="id" nillable="true" type="soapenc:long"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="reason" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConfigBackupVO">
        <complexContent>
          <extension base="tns1:CreatorVO">
            <sequence>
              <element name="appInstance" nillable="true" type="tns12:ApplicationInstanceVO"/>
              <element name="name" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidParameterException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="parameters" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustomerConstraintException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="parameters" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PlatformConstraintException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="parameters" nillable="true" type="impl:ArrayOf_soapenc_string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLTemplateInfoRef">
        <complexContent>
          <extension base="tns12:CMLRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConcurrencyException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DeleteFileException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="filename" nillable="true" type="soapenc:string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DeviceLockException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="dvcId" nillable="true" type="soapenc:long"/>
              <element name="jobId" type="xsd:long"/>
              <element name="lockDate" nillable="true" type="xsd:dateTime"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ConfigIOException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CreateFileException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="filename" nillable="true" type="soapenc:string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AccessControlException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueNameException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="name" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLFieldValidationException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidStackException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="stack" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProgressException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="fields" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RequiredFieldException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="fields" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CMLFileGenerationException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidCMLParserException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="parserType" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ScheduleParseException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="fields" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AsyncJobException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="results" nillable="true" type="apachesoap:Map"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidScheduleTargetException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="fields" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RulesParsingException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="fields" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidTargetException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="target" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueFileNameException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="filename" nillable="true" type="soapenc:string"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BadFileTypeException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="filename" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ScriptFailedException">
        <complexContent>
          <extension base="tns12:ACException">
            <sequence>
              <element name="code" type="xsd:int"/>
              <element name="dvcId" nillable="true" type="soapenc:long"/>
              <element name="messageDetails" nillable="true" type="soapenc:string"/>
              <element name="scriptName" nillable="true" type="soapenc:string"/>
              <element name="stderr" nillable="true" type="soapenc:string"/>
              <element name="stdout" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ACMTestResult">
        <complexContent>
          <extension base="tns16:DashboardTestResult">
            <sequence>
              <element name="stateAsString" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://custattr.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="NoSuchFieldException">
        <complexContent>
          <extension base="tns1:OpswareException">
            <sequence>
              <element name="name" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="VirtualColumnRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="VirtualColumnVO">
        <complexContent>
          <extension base="tns1:ModifiableVO">
            <sequence>
              <element name="configInfo" nillable="true" type="apachesoap:Map"/>
              <element name="displayName" nillable="true" type="soapenc:string"/>
              <element name="name" nillable="true" type="soapenc:string"/>
              <element name="namespace" nillable="true" type="soapenc:string"/>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustAttrNamespaceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://pkg.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="PatchUnitRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CustomFieldUnitRef">
        <complexContent>
          <extension base="tns15:PatchUnitRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchRef">
        <complexContent>
          <extension base="tns15:PatchUnitRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SoftwareRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DEBRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="AbstractServerDataResultRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence>
              <element name="type" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerSnapshotResultRef">
        <complexContent>
          <extension base="tns15:AbstractServerDataResultRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ZIPRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnknownPkgRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BuildCustomizationScriptRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AppInstallerRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ExecutableRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RPMRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RelocatableZIPRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MRLRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServerModuleResultRef">
        <complexContent>
          <extension base="tns15:AbstractServerDataResultRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidPlatformAssignmentException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="reason" nillable="true" type="soapenc:string"/>
              <element name="unitRef" nillable="true" type="xsd:anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://xml.apache.org/xml-soap" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="mapItem">
        <sequence>
          <element name="key" nillable="true" type="xsd:anyType"/>
          <element name="value" nillable="true" type="xsd:anyType"/>
        </sequence>
      </complexType>
      <complexType name="Map">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" type="apachesoap:mapItem"/>
        </sequence>
      </complexType>
    </schema>
    <schema targetNamespace="http://compliance.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="DashboardTestRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DashboardTestResult">
        <sequence>
          <element name="code" nillable="true" type="soapenc:string"/>
          <element name="dashboardTest" nillable="true" type="tns16:DashboardTestRef"/>
          <element name="dashboardTestTarget" nillable="true" type="xsd:anyType"/>
          <element name="lastCheckDate" nillable="true" type="xsd:dateTime"/>
          <element name="reason" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="ComplianceScanSummary">
        <sequence>
          <element name="auditPolicy" nillable="true" type="xsd:anyType"/>
          <element name="complianceScan" nillable="true" type="xsd:anyType"/>
          <element name="complianceScanResult" nillable="true" type="xsd:anyType"/>
          <element name="complianceScanTarget" nillable="true" type="xsd:anyType"/>
          <element name="failedRuleCount" type="xsd:int"/>
          <element name="partiallyPassedRuleCount" type="xsd:int"/>
          <element name="resultCode" nillable="true" type="soapenc:string"/>
          <element name="systemFailure" nillable="true" type="soapenc:string"/>
          <element name="testDate" nillable="true" type="xsd:dateTime"/>
          <element name="totalRuleCount" type="xsd:int"/>
        </sequence>
      </complexType>
      <complexType name="AggregateTestResult">
        <complexContent>
          <extension base="tns16:DashboardTestResult">
            <sequence>
              <element name="failures" nillable="true" type="impl:ArrayOf_tns16_DashboardTestRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://osprov.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="OSSequenceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OSSequenceJobParams">
        <sequence>
          <element name="OSSequence" nillable="true" type="tns17:OSSequenceRef"/>
          <element name="customer" nillable="true" type="tns4:CustomerRef"/>
          <element name="preserveNetwork" type="xsd:boolean"/>
          <element name="reprovision" type="xsd:boolean"/>
          <element name="skipCustomerUpdate" type="xsd:boolean"/>
          <element name="timeout" nillable="true" type="soapenc:long"/>
        </sequence>
      </complexType>
      <complexType name="InstallProfileRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OSBuildPlanRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://windows.pkg.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="WindowsPatchRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="HotfixRef">
        <complexContent>
          <extension base="tns18:WindowsPatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WindowsUtilityRef">
        <complexContent>
          <extension base="tns15:PatchUnitRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UpdateRollupRef">
        <complexContent>
          <extension base="tns18:WindowsPatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ServicePackRef">
        <complexContent>
          <extension base="tns18:WindowsPatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MSIRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchMetaDataRef">
        <complexContent>
          <extension base="tns15:PatchUnitRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://hpux.pkg.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="FilesetRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DepotRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchFilesetRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchProductRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProductRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="PatchBundleRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://folder.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="FolderRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FolderRemoveException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="removedFNodes" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BulkRemoveException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="remainingFNodes" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
              <element name="removedFNodes" nillable="true" type="impl:ArrayOf_xsd_anyType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://v12n.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType abstract="true" name="V12nContainerRef">
        <complexContent>
          <extension base="tns21:FolderRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="V12nLeafRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="V12nVirtualServerBaseRef">
        <complexContent>
          <extension base="tns20:V12nLeafRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nVirtualServerRef">
        <complexContent>
          <extension base="tns20:V12nVirtualServerBaseRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nClusterRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nResourcePoolRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nHypervisorRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nInventoryRootRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nGeneralContainerItemRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nInventoryFolderRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nDriverRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nGeneralLeafItemRef">
        <complexContent>
          <extension base="tns20:V12nLeafRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nVirtualServerTemplateRef">
        <complexContent>
          <extension base="tns20:V12nVirtualServerBaseRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://aix.pkg.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="UpdateFilesetRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="LPPRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="APARRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="APARFilesetRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="BaseFilesetRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://solaris.pkg.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="SolResponseFileRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPatchBundleChunkRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPatchRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPkgInstanceRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPkgRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPatchBundleRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="IpsRef">
        <complexContent>
          <extension base="tns15:SoftwareRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SolPatchClusterRef">
        <complexContent>
          <extension base="tns15:PatchRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://vmware.v12n.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="V12nDatacenterRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nDatastoreRef">
        <complexContent>
          <extension base="tns20:V12nLeafRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://nas.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="NetworkPolicyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkACLRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkDeviceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkModuleRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkTopologyRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkAutomationUserRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkPortRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkScriptRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkDeviceGroupRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkEventRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkConfigurationRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://mgmtservice.v12n.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="V12nManagerRef">
        <complexContent>
          <extension base="tns11:ManagerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="V12nVIManagerRef">
        <complexContent>
          <extension base="tns26:V12nManagerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://apx.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="APXRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProgramAPXRef">
        <complexContent>
          <extension base="tns27:APXRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="APXInterfaceRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WebAPXRef">
        <complexContent>
          <extension base="tns27:APXRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="APXVersionRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="APXType" nillable="true" type="soapenc:string"/>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WebAPXVersionRef">
        <complexContent>
          <extension base="tns27:APXVersionRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ProgramAPXVersionRef">
        <complexContent>
          <extension base="tns27:APXVersionRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UnApprovedVersionException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="APX" nillable="true" type="tns27:APXRef"/>
              <element name="version" nillable="true" type="tns27:APXVersionRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueVersionLabelException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="APX" nillable="true" type="tns27:APXRef"/>
              <element name="version" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://microsoft.v12n.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="V12nHostGroupRef">
        <complexContent>
          <extension base="tns20:V12nContainerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://mgmtservice.ilo.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="IloManagerRef">
        <complexContent>
          <extension base="tns11:ManagerRef">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://savedsearch.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="SavedSearchRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://report.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ReportRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://script.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ServerScriptRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="OGFSScriptRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="UniqueVersionStringException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="script" nillable="true" type="xsd:anyType"/>
              <element name="version" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://busapp.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="BusinessAppRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://reportresult.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="ReportResultRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://atm.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="AuditEventRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://sitemap.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="SiteMapResultRef">
        <complexContent>
          <extension base="tns1:ObjRef">
            <sequence>
              <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://policy.sco.compliance.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="RuleSourceValue">
        <sequence>
          <element name="resolvedValue" nillable="true" type="soapenc:string"/>
          <element name="source" type="xsd:int"/>
          <element name="value" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="PolicyComparisonDefinition">
        <sequence>
          <element name="argsType" nillable="true" type="soapenc:string"/>
          <element name="caseIgnore" type="xsd:boolean"/>
          <element name="notModifier" type="xsd:boolean"/>
          <element name="operator" nillable="true" type="soapenc:string"/>
          <element name="values" nillable="true" type="impl:ArrayOf_tns37_RuleSourceValue"/>
        </sequence>
      </complexType>
      <complexType name="AppConfigPolicyComparisonDefinition">
        <complexContent>
          <extension base="tns37:PolicyComparisonDefinition">
            <sequence>
              <element name="remediationValue" nillable="true" type="tns37:RuleSourceValue"/>
              <element name="resolved" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="RuleSourceSCORule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="displayName" nillable="true" type="soapenc:string"/>
              <element name="policyComparisonDefinition" nillable="true" type="tns37:PolicyComparisonDefinition"/>
              <element name="policyType" nillable="true" type="soapenc:string"/>
              <element name="remediateArgs" nillable="true" type="impl:ArrayOf_tns37_RuleSourceValue"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkDuplexRule">
        <complexContent>
          <extension base="tns37:RuleSourceSCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="StorageInitiatorRule">
        <complexContent>
          <extension base="tns37:RuleSourceSCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorInitiatorPortsRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorLunRaidTypesRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="SCOCollectionRules">
        <sequence/>
      </complexType>
      <complexType abstract="true" name="FilterableSCOCollectionRules">
        <complexContent>
          <extension base="tns37:SCOCollectionRules">
            <sequence>
              <element name="collectContent" type="xsd:boolean"/>
              <element name="excludes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="includes" nillable="true" type="impl:ArrayOf_soapenc_string"/>
              <element name="recurse" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RegistryCollectionRules">
        <complexContent>
          <extension base="tns37:FilterableSCOCollectionRules">
            <sequence>
              <element name="gatherNTACLs" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="SCOComparisonRules">
        <sequence>
          <element name="ignoreCase" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <complexType name="RegistryObjectComparisonRules">
        <complexContent>
          <extension base="tns37:SCOComparisonRules">
            <sequence>
              <element name="compareACLs" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="RegistryRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:RegistryCollectionRules"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:RegistryObjectComparisonRules"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RegistryKeyRule">
        <complexContent>
          <extension base="tns37:RegistryRule">
            <sequence>
              <element name="key" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AppConfigSubRuleElement">
        <sequence>
          <element name="comparator" nillable="true" type="tns37:AppConfigPolicyComparisonDefinition"/>
          <element name="key" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="AppConfigSubRule">
        <sequence>
          <element name="elements" nillable="true" type="impl:ArrayOf_tns37_AppConfigSubRuleElement"/>
        </sequence>
      </complexType>
      <complexType name="AppConfigRule">
        <complexContent>
          <extension base="tns37:RuleSourceSCORule">
            <sequence>
              <element name="CML" nillable="true" type="tns12:CMLRef"/>
              <element name="compareSource" type="xsd:boolean"/>
              <element name="encoding" nillable="true" type="soapenc:string"/>
              <element name="filename" nillable="true" type="soapenc:string"/>
              <element name="subRules" nillable="true" type="impl:ArrayOf_tns37_AppConfigSubRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileCMLMapping">
        <sequence>
          <element name="CML" nillable="true" type="tns12:CMLRef"/>
          <element name="fileGlob" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
      <complexType name="FileSystemCollectionRules">
        <complexContent>
          <extension base="tns37:FilterableSCOCollectionRules">
            <sequence>
              <element name="checksumSize" type="xsd:int"/>
              <element name="fileSizeLimit" type="xsd:long"/>
              <element name="gatherDirs" type="xsd:boolean"/>
              <element name="gatherFiles" type="xsd:boolean"/>
              <element name="gatherLinkContent" type="xsd:boolean"/>
              <element name="gatherNTACLs" type="xsd:boolean"/>
              <element name="gatherVersion" type="xsd:boolean"/>
              <element name="recurseExcluded" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileSystemObjectComparisonRules">
        <complexContent>
          <extension base="tns37:SCOComparisonRules">
            <sequence>
              <element name="compareAccessInformation" type="xsd:boolean"/>
              <element name="compareChecksum" type="xsd:boolean"/>
              <element name="compareModifiedDates" type="xsd:boolean"/>
              <element name="compareVersionInformation" type="xsd:boolean"/>
              <element name="fileCMLMappings" nillable="true" type="impl:ArrayOf_tns37_FileCMLMapping"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="FileSystemRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:FileSystemCollectionRules"/>
              <element name="dontParseFilename" type="xsd:boolean"/>
              <element name="filename" nillable="true" type="soapenc:string"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:FileSystemObjectComparisonRules"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="DirectoryRule">
        <complexContent>
          <extension base="tns37:FileSystemRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SMORule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="CFL" nillable="true" type="soapenc:string"/>
              <element name="description" nillable="true" type="soapenc:string"/>
              <element name="requiresSource" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MetabaseCollectionRules">
        <complexContent>
          <extension base="tns37:FilterableSCOCollectionRules">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="MetabaseRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:MetabaseCollectionRules"/>
              <element name="displayName" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorTargetPortsRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorFabricsRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkInterfaceRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RegistryValueRule">
        <complexContent>
          <extension base="tns37:RegistryKeyRule">
            <sequence>
              <element name="value" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="COMPlusCollectionRules">
        <complexContent>
          <extension base="tns37:FilterableSCOCollectionRules">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="COMPlusObjectComparisonRules">
        <complexContent>
          <extension base="tns37:SCOComparisonRules">
            <sequence>
              <element name="compareFileName" type="xsd:boolean"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="COMPlusRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:COMPlusCollectionRules"/>
              <element name="displayName" nillable="true" type="soapenc:string"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:COMPlusObjectComparisonRules"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="COMPlusCategoryRule">
        <complexContent>
          <extension base="tns37:COMPlusRule">
            <sequence>
              <element name="category" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MemoryRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorUnreplicatedLunCountRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorHBAsRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorSwitchesRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WinServicesCollectionRules">
        <complexContent>
          <extension base="tns37:FilterableSCOCollectionRules">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WinServicesRule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:WinServicesCollectionRules"/>
              <element name="displayName" nillable="true" type="soapenc:string"/>
              <element name="name" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MetabaseKeyRule">
        <complexContent>
          <extension base="tns37:MetabaseRule">
            <sequence>
              <element name="key" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MetabaseValueRule">
        <complexContent>
          <extension base="tns37:MetabaseKeyRule">
            <sequence>
              <element name="value" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileRule">
        <complexContent>
          <extension base="tns37:FileSystemRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorUnusedLunCountRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="COMPlusClassIdRule">
        <complexContent>
          <extension base="tns37:COMPlusRule">
            <sequence>
              <element name="classId" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CPURule">
        <complexContent>
          <extension base="tns13:SCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="CmdOutputRule">
        <complexContent>
          <extension base="tns37:RuleSourceSCORule">
            <sequence>
              <element name="argumentsForCmd" nillable="true" type="impl:ArrayOf_tns37_RuleSourceValue"/>
              <element name="timeout" type="xsd:int"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorUnusedLunCapacityRule">
        <complexContent>
          <extension base="tns37:StorageInitiatorRule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ScriptOutputRule">
        <complexContent>
          <extension base="tns37:CmdOutputRule">
            <sequence>
              <element name="ignoreNonZeroExitCode" type="xsd:boolean"/>
              <element name="remediateScript" nillable="true" type="soapenc:string"/>
              <element name="remediateScriptType" nillable="true" type="soapenc:string"/>
              <element name="script" nillable="true" type="soapenc:string"/>
              <element name="scriptType" nillable="true" type="soapenc:string"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SCOCheckRule">
        <complexContent>
          <extension base="tns37:CmdOutputRule">
            <sequence>
              <element name="check" nillable="true" type="tns13:SCOCheckRef"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInventoryRule">
        <complexContent>
          <extension base="tns37:RuleSourceSCORule">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="ServerSourceSCOPolicy">
        <complexContent>
          <extension base="tns13:SCOPolicy">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WinServicesPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:WinServicesCollectionRules"/>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_WinServicesRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="RuleSourceSCOPolicy">
        <complexContent>
          <extension base="tns13:SCOPolicy">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInitiatorPolicy">
        <complexContent>
          <extension base="tns37:RuleSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_StorageInitiatorRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StorageInventoryPolicy">
        <complexContent>
          <extension base="tns37:RuleSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_StorageInventoryRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="RegistryPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:RegistryCollectionRules"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:RegistryObjectComparisonRules"/>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_RegistryRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType abstract="true" name="CmdOutputPolicy">
        <complexContent>
          <extension base="tns37:RuleSourceSCOPolicy">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SCOCheckPolicy">
        <complexContent>
          <extension base="tns37:CmdOutputPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_SCOCheckRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkDuplexPolicy">
        <complexContent>
          <extension base="tns37:RuleSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_NetworkDuplexRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="AppConfigPolicy">
        <complexContent>
          <extension base="tns13:SCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_AppConfigRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="COMPlusPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:COMPlusCollectionRules"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:COMPlusObjectComparisonRules"/>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_COMPlusRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MemoryPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_MemoryRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="MetabasePolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:MetabaseCollectionRules"/>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_MetabaseRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="FileSystemPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="collectionRules" nillable="true" type="tns37:FileSystemCollectionRules"/>
              <element name="objectComparisonRules" nillable="true" type="tns37:FileSystemObjectComparisonRules"/>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_FileSystemRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InstalledPatchPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="CPUPolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_CPURule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="StoragePolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_StorageRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="ScriptOutputPolicy">
        <complexContent>
          <extension base="tns37:CmdOutputPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_ScriptOutputRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="SMOPolicy">
        <complexContent>
          <extension base="tns37:RuleSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_SMORule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InstalledPackagePolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence/>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="NetworkInterfacePolicy">
        <complexContent>
          <extension base="tns37:ServerSourceSCOPolicy">
            <sequence>
              <element name="rules" nillable="true" type="impl:ArrayOf_tns37_NetworkInterfaceRule"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema targetNamespace="http://args.fido.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://apx.fido.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="Resource">
        <sequence>
          <element name="id" type="xsd:long"/>
          <element name="secureResourceTypeName" nillable="true" type="soapenc:string"/>
        </sequence>
      </complexType>
    </schema>
    <schema targetNamespace="http://apx.fido.opsware.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://server.opsware.com"/>
      <import namespace="http://windows.pkg.opsware.com"/>
      <import namespace="http://args.fido.opsware.com"/>
      <import namespace="http://hpux.pkg.opsware.com"/>
      <import namespace="http://swmgmt.opsware.com"/>
      <import namespace="http://search.opsware.com"/>
      <import namespace="http://atm.opsware.com"/>
      <import namespace="http://apx.opsware.com"/>
      <import namespace="http://sitemap.opsware.com"/>
      <import namespace="http://locality.opsware.com"/>
      <import namespace="http://acm.opsware.com"/>
      <import namespace="http://virtualization.opsware.com"/>
      <import namespace="http://microsoft.v12n.opsware.com"/>
      <import namespace="http://osprov.opsware.com"/>
      <import namespace="http://reportresult.opsware.com"/>
      <import namespace="http://vmware.v12n.opsware.com"/>
      <import namespace="http://aix.pkg.opsware.com"/>
      <import namespace="http://sco.compliance.opsware.com"/>
      <import namespace="http://smo.opsware.com"/>
      <import namespace="http://compliance.opsware.com"/>
      <import namespace="http://policy.sco.compliance.opsware.com"/>
      <import namespace="http://common.opsware.com"/>
      <import namespace="http://nas.opsware.com"/>
      <import namespace="http://fido.opsware.com"/>
      <import namespace="http://mgmtservice.ilo.opsware.com"/>
      <import namespace="http://script.opsware.com"/>
      <import namespace="http://busapp.opsware.com"/>
      <import namespace="http://device.opsware.com"/>
      <import namespace="http://v12n.opsware.com"/>
      <import namespace="http://report.opsware.com"/>
      <import namespace="http://mgmtservice.v12n.opsware.com"/>
      <import namespace="http://savedsearch.opsware.com"/>
      <import namespace="http://job.opsware.com"/>
      <import namespace="http://mgmtservice.opsware.com"/>
      <import namespace="http://folder.opsware.com"/>
      <import namespace="http://custattr.opsware.com"/>
      <import namespace="http://storage.opsware.com"/>
      <import namespace="http://xml.apache.org/xml-soap"/>
      <import namespace="http://solaris.pkg.opsware.com"/>
      <import namespace="http://pkg.opsware.com"/>
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
      <complexType name="APXAuthorizationDeniedException">
        <complexContent>
          <extension base="tns2:AuthorizationException">
            <sequence>
              <element name="APXId" nillable="true" type="soapenc:long"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="InvalidAPXSecurityDescriptorException">
        <complexContent>
          <extension base="tns1:ConstraintException">
            <sequence>
              <element name="column" type="xsd:int"/>
              <element name="details" nillable="true" type="soapenc:string"/>
              <element name="lineNumber" type="xsd:int"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
  </types>
  <message name="setCustomFieldResponse6"></message>
  <message name="readConfigFileRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="path" type="soapenc:string"/>
    <part name="encoding" type="soapenc:string"/>
  </message>
  <message name="setCustomFieldResponse7"></message>
  <message name="setCustomFieldResponse4"></message>
  <message name="setCustomFieldResponse5"></message>
  <message name="setCustomFieldResponse2"></message>
  <message name="setCustomFieldResponse3"></message>
  <message name="setCustomFieldResponse1"></message>
  <message name="addDeviceGroupsRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="groups" type="intf:ArrayOf_tns5_DeviceGroupRef"/>
  </message>
  <message name="getConfigurableVOsRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getServerHardwareVOResponse">
    <part name="getServerHardwareVOReturn" type="intf:ServerHardwareVO"/>
  </message>
  <message name="getStorageInitiatorsResponse">
    <part name="getStorageInitiatorsReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="updateResponse1">
    <part name="updateReturn" type="tns12:ConfigurableVO"/>
  </message>
  <message name="removeCustAttrRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="key" type="soapenc:string"/>
  </message>
  <message name="PlatformConstraintException">
    <part name="fault" type="tns12:PlatformConstraintException"/>
  </message>
  <message name="attachPoliciesResponse"></message>
  <message name="findVirtualColumnRefRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="startInstallSoftwareResponse">
    <part name="startInstallSoftwareReturn" type="tns7:JobRef"/>
  </message>
  <message name="mergeRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="sourceServerRef" type="intf:ServerRef"/>
  </message>
  <message name="isStorageExtensionEnabledResponse">
    <part name="isStorageExtensionEnabledReturn" type="soapenc:boolean"/>
  </message>
  <message name="getPolicyAttachableStatesRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="findServerRefsBySubnetResponse">
    <part name="findServerRefsBySubnetReturn" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="attachPoliciesRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="policies" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="SpokeCommException">
    <part name="fault" type="tns12:SpokeCommException"/>
  </message>
  <message name="executeManipulationScriptResponse"></message>
  <message name="findVirtualColumnRefResponse">
    <part name="findVirtualColumnRefReturn" type="tns14:VirtualColumnRef"/>
  </message>
  <message name="getApplicationInstancesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getCustAttrRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="key" type="soapenc:string"/>
    <part name="useScope" type="xsd:boolean"/>
  </message>
  <message name="getServerHardwareVOsRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="getCustAttrsRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="matchKey" type="soapenc:string"/>
    <part name="useScope" type="xsd:boolean"/>
  </message>
  <message name="bulkUpdateRequest">
    <part name="configs" type="intf:ArrayOf_tns12_ConfigurableVO"/>
    <part name="force" type="xsd:boolean"/>
    <part name="refetch" type="xsd:boolean"/>
  </message>
  <message name="getPortsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="attachVirtualColumnResponse"></message>
  <message name="restoreConfigurationResponse1"></message>
  <message name="detachVirtualColumnRequest">
    <part name="virtualColumn" type="tns14:VirtualColumnRef"/>
  </message>
  <message name="createVirtualColumnRequest">
    <part name="vo" type="tns14:VirtualColumnVO"/>
  </message>
  <message name="readConfigFileResponse">
    <part name="readConfigFileReturn" type="soapenc:string"/>
  </message>
  <message name="getCustAttrKeysResponse">
    <part name="getCustAttrKeysReturn" type="intf:ArrayOf_soapenc_string"/>
  </message>
  <message name="findVirtualColumnRefRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="restoreConfigurationResponse"></message>
  <message name="scanConfigurationRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="checkDuplexRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="startRebootResponse">
    <part name="startRebootReturn" type="tns7:JobRef"/>
  </message>
  <message name="getCustomFieldDateResponse">
    <part name="getCustomFieldDateReturn" type="xsd:dateTime"/>
  </message>
  <message name="getCommCheckDateRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getStorageInitiatorTargetViewsResponse">
    <part name="getStorageInitiatorTargetViewsReturn" type="intf:ArrayOf_tns3_LogicalVolumeTargetView"/>
  </message>
  <message name="getConfigurableVORequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getProtocolControllersResponse">
    <part name="getProtocolControllersReturn" type="intf:ArrayOf_tns3_ProtocolControllerRef"/>
  </message>
  <message name="getCustomFieldDateResponse1">
    <part name="getCustomFieldDateReturn" type="xsd:dateTime"/>
  </message>
  <message name="getStorageInitiatorVolumesResponse">
    <part name="getStorageInitiatorVolumesReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="runAgentCommTestResponse">
    <part name="runAgentCommTestReturn" type="tns7:JobRef"/>
  </message>
  <message name="getDeviceGroupsResponse">
    <part name="getDeviceGroupsReturn" type="intf:ArrayOf_tns5_DeviceGroupRef"/>
  </message>
  <message name="removeCustAttrRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="key" type="soapenc:string"/>
  </message>
  <message name="getStorageInitiatorUnmountedVolumesResponse">
    <part name="getStorageInitiatorUnmountedVolumesReturn" type="intf:ArrayOf_tns3_UnmountedLogicalVolumeVO"/>
  </message>
  <message name="getCustomFieldStringRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="restoreConfigurationRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="backup" type="tns12:ConfigBackupRef"/>
    <part name="restoreType" type="xsd:int"/>
  </message>
  <message name="getStorageInitiatorResponse">
    <part name="getStorageInitiatorReturn" type="tns3:StorageInitiatorRef"/>
  </message>
  <message name="getCustomFieldStringRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getAgentCryptoInfoVOsResponse">
    <part name="getAgentCryptoInfoVOsReturn" type="intf:ArrayOfAgentCryptoInfoVO"/>
  </message>
  <message name="getDashboardTestResultsResponse1">
    <part name="getDashboardTestResultsReturn" type="intf:ArrayOf_tns16_DashboardTestResult"/>
  </message>
  <message name="getVirtualServerRefsResponse">
    <part name="getVirtualServerRefsReturn" type="intf:ArrayOf_tns9_VirtualServerRef"/>
  </message>
  <message name="CMLTemplateSyntaxException">
    <part name="fault" type="tns12:CMLTemplateSyntaxException"/>
  </message>
  <message name="CMLFileParsingException">
    <part name="fault" type="tns12:CMLFileParsingException"/>
  </message>
  <message name="getCommCheckDateResponse">
    <part name="getCommCheckDateReturn" type="xsd:dateTime"/>
  </message>
  <message name="getCustomFieldLongRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getComplianceScansRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="readConfigBackupContentsRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="configBackupRef" type="tns12:ConfigBackupRef"/>
    <part name="readLiveFile" type="xsd:boolean"/>
  </message>
  <message name="getApplicationInstanceVOResponse">
    <part name="getApplicationInstanceVOReturn" type="tns12:ApplicationInstanceVO"/>
  </message>
  <message name="findManagersOfTypeResponse">
    <part name="findManagersOfTypeReturn" type="intf:ArrayOf_tns11_ManagerRef"/>
  </message>
  <message name="startUninstallPackageRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="packageInfos" type="intf:ArrayOf_tns8_PackageInfo"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="updateStorageConnectionInfoRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="vo" type="tns3:StorageConnectionInfoVO"/>
    <part name="force" type="xsd:boolean"/>
    <part name="refetch" type="xsd:boolean"/>
  </message>
  <message name="updateConfigurableRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="vo" type="tns12:ConfigurableVO"/>
    <part name="force" type="xsd:boolean"/>
    <part name="refetch" type="xsd:boolean"/>
  </message>
  <message name="getConfigurableVOsResponse">
    <part name="getConfigurableVOsReturn" type="intf:ArrayOf_tns12_ConfigurableVO"/>
  </message>
  <message name="getCustAttrsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="matchKey" type="soapenc:string"/>
    <part name="useScope" type="xsd:boolean"/>
  </message>
  <message name="setCustAttrsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="keyval" type="tns1:ModifiableMap"/>
  </message>
  <message name="startUninstallPackageResponse">
    <part name="startUninstallPackageReturn" type="tns7:JobRef"/>
  </message>
  <message name="clearCustAttrsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="LegacyException">
    <part name="fault" type="tns1:LegacyException"/>
  </message>
  <message name="getServerVOsResponse">
    <part name="getServerVOsReturn" type="intf:ArrayOfServerVO"/>
  </message>
  <message name="setCustAttrsRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="keyval" type="tns1:ModifiableMap"/>
  </message>
  <message name="removeConfigBackupsResponse"></message>
  <message name="getCustAttrsResponse1">
    <part name="getCustAttrsReturn" type="tns1:ModifiableMap"/>
  </message>
  <message name="getInstalledSoftwareResponse">
    <part name="getInstalledSoftwareReturn" type="intf:ArrayOfInstalledSoftware"/>
  </message>
  <message name="getHostedManagersResponse">
    <part name="getHostedManagersReturn" type="intf:ArrayOf_tns11_ManagerRef"/>
  </message>
  <message name="setCustomFieldsRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="keyval" type="tns1:ModifiableMap"/>
  </message>
  <message name="getCustomFieldDateRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getStorageTargetServicesResponse">
    <part name="getStorageTargetServicesReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="createAppInstanceRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
    <part name="typeId" type="tns12:ConfigurationRef"/>
  </message>
  <message name="updateStorageConnectionInfoResponse">
    <part name="updateStorageConnectionInfoReturn" type="tns3:StorageConnectionInfoVO"/>
  </message>
  <message name="updateRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="vo" type="intf:ServerVO"/>
    <part name="force" type="xsd:boolean"/>
    <part name="refetch" type="xsd:boolean"/>
  </message>
  <message name="setCustAttrsResponse1"></message>
  <message name="getStorageAgentsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustomFieldUnitRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getProtocolControllersRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="IllegalValueException">
    <part name="fault" type="tns1:IllegalValueException"/>
  </message>
  <message name="getStorageTargetsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getStorageTargetInitiatorViewsResponse1">
    <part name="getStorageTargetInitiatorViewsReturn" type="intf:ArrayOf_tns3_LogicalVolumeInitiatorView"/>
  </message>
  <message name="ModifiedException">
    <part name="fault" type="tns1:ModifiedException"/>
  </message>
  <message name="startConfigurationPushResponse">
    <part name="startConfigurationPushReturn" type="tns7:JobRef"/>
  </message>
  <message name="getDeviceGroupsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="setCustAttrRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="key" type="soapenc:string"/>
    <part name="value" type="soapenc:string"/>
  </message>
  <message name="mergeResponse">
    <part name="mergeReturn" type="intf:ServerRef"/>
  </message>
  <message name="getStorageServicesRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustomFieldRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getSoftwarePoliciesRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getScopedConfigurableVOsResponse1">
    <part name="getScopedConfigurableVOsReturn" type="intf:ArrayOf_tns12_ConfigurableVO"/>
  </message>
  <message name="removeCustAttrResponse"></message>
  <message name="findScheduledPushJobsRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="attachVirtualColumnRequest">
    <part name="virtualColumn" type="tns14:VirtualColumnRef"/>
  </message>
  <message name="getComplianceScanSummariesResponse">
    <part name="getComplianceScanSummariesReturn" type="intf:ArrayOf_tns16_ComplianceScanSummary"/>
  </message>
  <message name="ConstraintException">
    <part name="fault" type="tns1:ConstraintException"/>
  </message>
  <message name="runAgentCommTestRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="setCustomFieldRequest7">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="longValue" type="soapenc:long"/>
  </message>
  <message name="setCustomFieldRequest6">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="strValue" type="soapenc:string"/>
  </message>
  <message name="setCustomFieldRequest5">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="dateValue" type="xsd:dateTime"/>
  </message>
  <message name="InvalidAppInstException">
    <part name="fault" type="tns12:InvalidAppInstException"/>
  </message>
  <message name="setCustomFieldRequest4">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="value" type="xsd:anyType"/>
  </message>
  <message name="setCustomFieldRequest3">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="longValue" type="soapenc:long"/>
  </message>
  <message name="setCustomFieldRequest2">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="strValue" type="soapenc:string"/>
  </message>
  <message name="setCustomFieldRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="dateValue" type="xsd:dateTime"/>
  </message>
  <message name="getServerVORequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="detachVirtualColumnResponse"></message>
  <message name="detachPoliciesResponse"></message>
  <message name="getCombinedValueSetRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="cfg" type="tns12:ConfigurationRef"/>
    <part name="instanceName" type="soapenc:string"/>
    <part name="templateRef" type="tns12:CMLRef"/>
    <part name="configFileText" type="soapenc:string"/>
  </message>
  <message name="scanConfigurationsRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="InvalidParameterException">
    <part name="fault" type="tns12:InvalidParameterException"/>
  </message>
  <message name="getServerHardwareVOsResponse">
    <part name="getServerHardwareVOsReturn" type="intf:ArrayOfServerHardwareVO"/>
  </message>
  <message name="findVirtualColumnRefResponse1">
    <part name="findVirtualColumnRefReturn" type="tns14:VirtualColumnRef"/>
  </message>
  <message name="findManagersOfTypeRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="mgrType" type="soapenc:string"/>
  </message>
  <message name="getComplianceScansResponse">
    <part name="getComplianceScansReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="startUninstallSoftwareRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="installables" type="intf:ArrayOf_xsd_anyType"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="modifiedSinceResponse">
    <part name="modifiedSinceReturn" type="xsd:boolean"/>
  </message>
  <message name="findServerRefsBySubnetRequest">
    <part name="ip" type="soapenc:string"/>
    <part name="netmask" type="soapenc:string"/>
  </message>
  <message name="createResponse">
    <part name="createReturn" type="intf:ServerVO"/>
  </message>
  <message name="getDashboardTestResultMatrixResponse">
    <part name="getDashboardTestResultMatrixReturn" type="intf:ArrayOfArrayOf_tns16_DashboardTestResult"/>
  </message>
  <message name="startScanSoftwarePolicyComplianceRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="setCustAttrsResponse"></message>
  <message name="getServerStagesResponse">
    <part name="getServerStagesReturn" type="intf:ArrayOfServerStage"/>
  </message>
  <message name="startRebootRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="startOSSequenceRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="params" type="tns17:OSSequenceJobParams"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="NoSuchFieldException">
    <part name="fault" type="tns14:NoSuchFieldException"/>
  </message>
  <message name="createStorageConnectionInfoResponse">
    <part name="createStorageConnectionInfoReturn" type="tns3:StorageConnectionInfoVO"/>
  </message>
  <message name="getDashboardTestResultRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="test" type="tns16:DashboardTestRef"/>
  </message>
  <message name="getConfigBackupVOsResponse">
    <part name="getConfigBackupVOsReturn" type="intf:ArrayOf_tns12_ConfigBackupVO"/>
  </message>
  <message name="NoChangeRequestedException">
    <part name="fault" type="tns1:NoChangeRequestedException"/>
  </message>
  <message name="startConfigurationScanRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="getCustomFieldLongResponse">
    <part name="getCustomFieldLongReturn" type="soapenc:long"/>
  </message>
  <message name="createStorageConnectionInfoRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="vo" type="tns3:StorageConnectionInfoVO"/>
  </message>
  <message name="getScopedConfigurableVOsResponse">
    <part name="getScopedConfigurableVOsReturn" type="intf:ArrayOf_tns12_ConfigurableVO"/>
  </message>
  <message name="getInstalledSoftwareRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustomFieldResponse1">
    <part name="getCustomFieldReturn" type="xsd:anyType"/>
  </message>
  <message name="getLogEntriesResponse">
    <part name="getLogEntriesReturn" type="intf:ArrayOf_tns1_ChangeLogEntry"/>
  </message>
  <message name="modifiedSinceRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="since" type="xsd:dateTime"/>
  </message>
  <message name="getAvailableServerModulesRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getAgentCryptoInfoVORequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="startOSSequenceResponse">
    <part name="startOSSequenceReturn" type="tns7:JobRef"/>
  </message>
  <message name="getCustomFieldsResponse1">
    <part name="getCustomFieldsReturn" type="tns1:ModifiableMap"/>
  </message>
  <message name="getServerVOsRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="startInstallSoftwareRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="installables" type="intf:ArrayOf_xsd_anyType"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="updateRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="vo" type="tns12:ConfigurableVO"/>
    <part name="force" type="xsd:boolean"/>
    <part name="refetch" type="xsd:boolean"/>
  </message>
  <message name="getVirtualColumnsResponse1">
    <part name="getVirtualColumnsReturn" type="intf:ArrayOf_tns14_VirtualColumnRef"/>
  </message>
  <message name="getStorageInitiatorServicesResponse">
    <part name="getStorageInitiatorServicesReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getStorageInitiatorUnmountedVolumesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getStorageInitiatorServicesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="restoreConfigurationRequest1">
    <part name="self" type="intf:ServerRef"/>
    <part name="backup" type="tns12:ConfigBackupRef"/>
  </message>
  <message name="getStorageInitiatorRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustomFieldRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getCustomFieldsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
  </message>
  <message name="getAgentCryptoInfoVOResponse">
    <part name="getAgentCryptoInfoVOReturn" type="intf:AgentCryptoInfoVO"/>
  </message>
  <message name="getStorageTargetInitiatorViewsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getSoftwarePolicyAssociationsResponse">
    <part name="getSoftwarePolicyAssociationsReturn" type="intf:ArrayOf_tns8_PolicyAssociation"/>
  </message>
  <message name="removeRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getVirtualServerRefsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="setCustomerRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="customer" type="tns4:CustomerRef"/>
  </message>
  <message name="setCustomFieldResponse"></message>
  <message name="AuthorizationException">
    <part name="fault" type="tns2:AuthorizationException"/>
  </message>
  <message name="getCustAttrResponse">
    <part name="getCustAttrReturn" type="soapenc:string"/>
  </message>
  <message name="getCustomFieldStringResponse1">
    <part name="getCustomFieldStringReturn" type="soapenc:string"/>
  </message>
  <message name="setCustomerResponse"></message>
  <message name="getComplianceScanStatesResponse">
    <part name="getComplianceScanStatesReturn" type="soapenc:base64Binary"/>
  </message>
  <message name="startInstallSoftwarePolicyTemplateNowRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="policies" type="intf:ArrayOf_tns8_SoftwarePolicyRef"/>
  </message>
  <message name="scanConfigurationResponse">
    <part name="scanConfigurationReturn" type="xsd:boolean"/>
  </message>
  <message name="removeStorageConnectionInfoRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="storageConnectionInfo" type="tns3:StorageConnectionInfoRef"/>
  </message>
  <message name="clearCustAttrsResponse1"></message>
  <message name="getCustAttrRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="key" type="soapenc:string"/>
    <part name="useScope" type="xsd:boolean"/>
  </message>
  <message name="getCustAttrResponse1">
    <part name="getCustAttrReturn" type="soapenc:string"/>
  </message>
  <message name="executeManipulationScriptRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="getDashboardTestResultsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="startRemediateRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="policies" type="intf:ArrayOf_xsd_anyType"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="getSoftwarePolicyAssociationsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getInstalledServiceResponse">
    <part name="getInstalledServiceReturn" type="intf:ArrayOfInstalledService"/>
  </message>
  <message name="getSoftwarePoliciesResponse">
    <part name="getSoftwarePoliciesReturn" type="intf:ArrayOf_tns8_SoftwarePolicyRef"/>
  </message>
  <message name="getSoftwareRollbackPointsResponse">
    <part name="getSoftwareRollbackPointsReturn" type="intf:ArrayOf_tns8_RollbackPointVO"/>
  </message>
  <message name="getCustomFieldLongRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getCombinedValueSetResponse">
    <part name="getCombinedValueSetReturn" type="tns12:ValueSet"/>
  </message>
  <message name="getDashboardTestResultResponse">
    <part name="getDashboardTestResultReturn" type="tns16:DashboardTestResult"/>
  </message>
  <message name="startConfigurationRestoreResponse1">
    <part name="startConfigurationRestoreReturn" type="tns7:JobRef"/>
  </message>
  <message name="startFullRemediateNowRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getCustAttrsWithRCRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="scanConfigurationsResponse"></message>
  <message name="getStorageTargetsResponse">
    <part name="getStorageTargetsReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getServerVOResponse">
    <part name="getServerVOReturn" type="intf:ServerVO"/>
  </message>
  <message name="isStorageExtensionEnabledRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="InvalidTypeException">
    <part name="fault" type="tns1:InvalidTypeException"/>
  </message>
  <message name="getPolicyAttachableStatesResponse">
    <part name="getPolicyAttachableStatesReturn" type="intf:ArrayOf_tns8_PolicyAttachableState"/>
  </message>
  <message name="getStorageAgentsResponse">
    <part name="getStorageAgentsReturn" type="intf:ArrayOf_tns3_AgentRef"/>
  </message>
  <message name="updateConfigurableResponse">
    <part name="updateConfigurableReturn" type="tns12:ConfigurableVO"/>
  </message>
  <message name="getCustomFieldStringResponse">
    <part name="getCustomFieldStringReturn" type="soapenc:string"/>
  </message>
  <message name="detachPoliciesRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="policies" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getStorageConnectionInfoVOsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="scannerType" type="soapenc:string"/>
  </message>
  <message name="getHostedManagersRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustAttrsWithRCResponse">
    <part name="getCustAttrsWithRCReturn" type="apachesoap:Map"/>
  </message>
  <message name="startScanPatchPolicyComplianceRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getLogEntriesRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="begin" type="xsd:dateTime"/>
    <part name="end" type="xsd:dateTime"/>
    <part name="ascending" type="xsd:boolean"/>
  </message>
  <message name="ACInternalException">
    <part name="fault" type="tns12:ACInternalException"/>
  </message>
  <message name="getServerUsesResponse">
    <part name="getServerUsesReturn" type="intf:ArrayOfServerUse"/>
  </message>
  <message name="NotFoundException">
    <part name="fault" type="tns1:NotFoundException"/>
  </message>
  <message name="getCustAttrDetailListsRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
    <part name="keys" type="intf:ArrayOf_soapenc_string"/>
    <part name="scope" type="soapenc:string"/>
    <part name="all" type="xsd:boolean"/>
  </message>
  <message name="MissingRequiredFieldException">
    <part name="fault" type="tns1:MissingRequiredFieldException"/>
  </message>
  <message name="startScanSoftwarePolicyComplianceResponse">
    <part name="startScanSoftwarePolicyComplianceReturn" type="tns7:JobRef"/>
  </message>
  <message name="getManagersResponse">
    <part name="getManagersReturn" type="intf:ArrayOf_tns11_ManagerRef"/>
  </message>
  <message name="getCustAttrsResponse">
    <part name="getCustAttrsReturn" type="tns1:ModifiableMap"/>
  </message>
  <message name="getServerHardwareVORequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getStorageInitiatorsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getStorageTargetInitiatorViewsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="storageInitiator" type="xsd:anyType"/>
  </message>
  <message name="startRemediateNowRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="policies" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getStorageTargetServicesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="SpokeIOException">
    <part name="fault" type="tns12:SpokeIOException"/>
  </message>
  <message name="CustomerConstraintException">
    <part name="fault" type="tns12:CustomerConstraintException"/>
  </message>
  <message name="createAppInstanceResponse">
    <part name="createAppInstanceReturn" type="tns12:ApplicationInstanceVO"/>
  </message>
  <message name="getScopedConfigurableVOsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="startUninstallSoftwareResponse">
    <part name="startUninstallSoftwareReturn" type="tns7:JobRef"/>
  </message>
  <message name="startInstallSoftwarePolicyTemplateNowResponse">
    <part name="startInstallSoftwarePolicyTemplateNowReturn" type="tns7:JobRef"/>
  </message>
  <message name="getCustomFieldUnitRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getCustAttrKeysRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
  </message>
  <message name="startRemediateNowResponse">
    <part name="startRemediateNowReturn" type="tns7:JobRef"/>
  </message>
  <message name="getStorageInitiatorTargetViewsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getStorageTargetInitiatorViewsResponse">
    <part name="getStorageTargetInitiatorViewsReturn" type="intf:ArrayOf_tns3_LogicalVolumeInitiatorView"/>
  </message>
  <message name="clearCustAttrsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
  </message>
  <message name="pushConfigurationResponse"></message>
  <message name="startConfigurationRestoreRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="backup" type="tns12:ConfigBackupRef"/>
    <part name="restoreType" type="xsd:int"/>
  </message>
  <message name="getServerUsesRequest"></message>
  <message name="startConfigurationRestoreRequest1">
    <part name="self" type="intf:ServerRef"/>
    <part name="backup" type="tns12:ConfigBackupRef"/>
  </message>
  <message name="getCustomFieldsResponse">
    <part name="getCustomFieldsReturn" type="tns1:ModifiableMap"/>
  </message>
  <message name="setCustomFieldsResponse1"></message>
  <message name="findServerRefsResponse">
    <part name="findServerRefsReturn" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="getScopedConfigurableVOsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="configRef" type="tns12:ConfigurationRef"/>
    <part name="instanceName" type="soapenc:string"/>
  </message>
  <message name="addDeviceGroupsResponse"></message>
  <message name="createVirtualColumnResponse">
    <part name="createVirtualColumnReturn" type="tns14:VirtualColumnRef"/>
  </message>
  <message name="setCustomFieldsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="keyval" type="tns1:ModifiableMap"/>
  </message>
  <message name="getApplicationInstanceVORequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="getStorageInitiatorTargetViewsRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="targetDevice" type="xsd:anyType"/>
  </message>
  <message name="getPhysicalDisksRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="removeDeviceGroupsRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="groups" type="intf:ArrayOf_tns5_DeviceGroupRef"/>
  </message>
  <message name="getConfigurableVOResponse">
    <part name="getConfigurableVOReturn" type="tns12:ConfigurableVO"/>
  </message>
  <message name="createRequest">
    <part name="vo" type="intf:ServerVO"/>
  </message>
  <message name="startConfigurationRestoreResponse">
    <part name="startConfigurationRestoreReturn" type="tns7:JobRef"/>
  </message>
  <message name="getServerStagesRequest"></message>
  <message name="getVirtualColumnsResponse">
    <part name="getVirtualColumnsReturn" type="intf:ArrayOf_tns14_VirtualColumnRef"/>
  </message>
  <message name="detachAllConfigurationsResponse"></message>
  <message name="getStorageInitiatorTargetViewsResponse1">
    <part name="getStorageInitiatorTargetViewsReturn" type="intf:ArrayOf_tns3_LogicalVolumeTargetView"/>
  </message>
  <message name="getCustomFieldsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getCustomFieldUnitResponse1">
    <part name="getCustomFieldUnitReturn" type="tns15:CustomFieldUnitRef"/>
  </message>
  <message name="startRemediateResponse">
    <part name="startRemediateReturn" type="tns7:JobRef"/>
  </message>
  <message name="setCustAttrRequest1">
    <part name="self" type="xsd:anyType"/>
    <part name="namespace" type="soapenc:string"/>
    <part name="key" type="soapenc:string"/>
    <part name="value" type="soapenc:string"/>
  </message>
  <message name="setCustomFieldsResponse"></message>
  <message name="bulkUpdateResponse">
    <part name="bulkUpdateReturn" type="intf:ArrayOf_tns12_ConfigurableVO"/>
  </message>
  <message name="getStorageInitiatorVolumesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getManagersRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="startConfigurationPushRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
    <part name="userTag" type="soapenc:string"/>
    <part name="notification" type="tns7:JobNotification"/>
    <part name="schedule" type="tns7:JobSchedule"/>
  </message>
  <message name="InvalidTemplateUseException">
    <part name="fault" type="tns8:InvalidTemplateUseException"/>
  </message>
  <message name="deleteAppInstanceResponse"></message>
  <message name="readConfigBackupContentsResponse">
    <part name="readConfigBackupContentsReturn" type="intf:ArrayOf_tns12_ConfigBackupContent"/>
  </message>
  <message name="getCustomFieldLongResponse1">
    <part name="getCustomFieldLongReturn" type="soapenc:long"/>
  </message>
  <message name="getPhysicalDisksResponse">
    <part name="getPhysicalDisksReturn" type="intf:ArrayOf_tns3_PhysicalDiskRef"/>
  </message>
  <message name="getComplianceScanSummaryRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="scan" type="xsd:anyType"/>
  </message>
  <message name="getStorageConnectionInfoVOsResponse">
    <part name="getStorageConnectionInfoVOsReturn" type="intf:ArrayOf_tns3_StorageConnectionInfoVO"/>
  </message>
  <message name="getStorageTargetVolumesResponse">
    <part name="getStorageTargetVolumesReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="decommissionResponse"></message>
  <message name="getComplianceScanStatesRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="scans" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="setCustAttrResponse1"></message>
  <message name="getStorageTargetVolumesRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="getCustomFieldResponse">
    <part name="getCustomFieldReturn" type="xsd:anyType"/>
  </message>
  <message name="getPortsResponse">
    <part name="getPortsReturn" type="intf:ArrayOf_tns3_PortRef"/>
  </message>
  <message name="getStorageServicesResponse">
    <part name="getStorageServicesReturn" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="getVirtualColumnsRequest1">
    <part name="namespace" type="soapenc:string"/>
  </message>
  <message name="ServerUnavailableException">
    <part name="fault" type="tns12:ServerUnavailableException"/>
  </message>
  <message name="getDashboardTestResultsResponse">
    <part name="getDashboardTestResultsReturn" type="intf:ArrayOf_tns16_DashboardTestResult"/>
  </message>
  <message name="getCustAttrDetailListsResponse">
    <part name="getCustAttrDetailListsReturn" type="intf:ArrayOfCustAttrDetailList"/>
  </message>
  <message name="getCustAttrKeysRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="decommissionRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="setCustAttrResponse"></message>
  <message name="removeConfigBackupsRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="appInst" type="tns12:ApplicationInstanceRef"/>
    <part name="startDate" type="xsd:dateTime"/>
    <part name="endDate" type="xsd:dateTime"/>
  </message>
  <message name="detachAllConfigurationsRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
    <part name="force" type="xsd:boolean"/>
  </message>
  <message name="getVirtualColumnsRequest"></message>
  <message name="setPrimaryInterfaceRequest">
    <part name="self" type="intf:ServerRef"/>
    <part name="slot" type="xsd:int"/>
  </message>
  <message name="removeDeviceGroupsResponse"></message>
  <message name="findScheduledPushJobsResponse">
    <part name="findScheduledPushJobsReturn" type="intf:ArrayOf_tns7_ScheduledJobRef"/>
  </message>
  <message name="JobException">
    <part name="fault" type="tns7:JobException"/>
  </message>
  <message name="pushConfigurationRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="SearchException">
    <part name="fault" type="tns10:SearchException"/>
  </message>
  <message name="getDashboardTestResultMatrixRequest">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
    <part name="tests" type="intf:ArrayOf_tns16_DashboardTestRef"/>
  </message>
  <message name="deleteAppInstanceRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="instName" type="soapenc:string"/>
  </message>
  <message name="startFullRemediateNowResponse">
    <part name="startFullRemediateNowReturn" type="tns7:JobRef"/>
  </message>
  <message name="getConfigBackupVOsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="setCustomFieldRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
    <part name="value" type="xsd:anyType"/>
  </message>
  <message name="startScanPatchPolicyComplianceResponse">
    <part name="startScanPatchPolicyComplianceReturn" type="tns7:JobRef"/>
  </message>
  <message name="getAvailableServerModulesResponse">
    <part name="getAvailableServerModulesReturn" type="intf:ArrayOf_tns6_ServerModuleRef"/>
  </message>
  <message name="getComplianceScanSummariesRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="scans" type="intf:ArrayOf_xsd_anyType"/>
  </message>
  <message name="removeStorageConnectionInfoResponse"></message>
  <message name="updateResponse">
    <part name="updateReturn" type="intf:ServerVO"/>
  </message>
  <message name="getCustAttrKeysResponse1">
    <part name="getCustAttrKeysReturn" type="intf:ArrayOf_soapenc_string"/>
  </message>
  <message name="getDashboardTestResultsRequest1">
    <part name="selves" type="intf:ArrayOf_xsd_anyType"/>
    <part name="tests" type="intf:ArrayOf_tns16_DashboardTestRef"/>
  </message>
  <message name="getComplianceScanSummaryResponse">
    <part name="getComplianceScanSummaryReturn" type="tns16:ComplianceScanSummary"/>
  </message>
  <message name="checkDuplexResponse"></message>
  <message name="ReadOnlyException">
    <part name="fault" type="tns1:ReadOnlyException"/>
  </message>
  <message name="getStorageConnectionInfoVOsResponse1">
    <part name="getStorageConnectionInfoVOsReturn" type="intf:ArrayOf_tns3_StorageConnectionInfoVO"/>
  </message>
  <message name="getInstalledServiceRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="getCustomFieldDateRequest">
    <part name="self" type="xsd:anyType"/>
    <part name="fieldName" type="soapenc:string"/>
  </message>
  <message name="getApplicationInstancesResponse">
    <part name="getApplicationInstancesReturn" type="apachesoap:Map"/>
  </message>
  <message name="clearCustAttrsResponse"></message>
  <message name="findServerRefsRequest">
    <part name="filter" type="tns10:Filter"/>
  </message>
  <message name="getCustomFieldUnitResponse">
    <part name="getCustomFieldUnitReturn" type="tns15:CustomFieldUnitRef"/>
  </message>
  <message name="removeCustAttrResponse1"></message>
  <message name="removeResponse"></message>
  <message name="getStorageConnectionInfoVOsRequest">
    <part name="self" type="xsd:anyType"/>
  </message>
  <message name="setPrimaryInterfaceResponse"></message>
  <message name="getAgentCryptoInfoVOsRequest">
    <part name="selves" type="intf:ArrayOfServerRef"/>
  </message>
  <message name="getSoftwareRollbackPointsRequest">
    <part name="self" type="intf:ServerRef"/>
  </message>
  <message name="startConfigurationScanResponse">
    <part name="startConfigurationScanReturn" type="tns7:JobRef"/>
  </message>
  <portType name="ServerService">
    <operation name="isStorageExtensionEnabled" parameterOrder="self">
      <input message="intf:isStorageExtensionEnabledRequest" name="isStorageExtensionEnabledRequest"/>
      <output message="intf:isStorageExtensionEnabledResponse" name="isStorageExtensionEnabledResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getStorageInitiator" parameterOrder="self">
      <input message="intf:getStorageInitiatorRequest" name="getStorageInitiatorRequest"/>
      <output message="intf:getStorageInitiatorResponse" name="getStorageInitiatorResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getStorageServices" parameterOrder="self">
      <input message="intf:getStorageServicesRequest" name="getStorageServicesRequest"/>
      <output message="intf:getStorageServicesResponse" name="getStorageServicesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getAgentCryptoInfoVO" parameterOrder="self">
      <input message="intf:getAgentCryptoInfoVORequest" name="getAgentCryptoInfoVORequest"/>
      <output message="intf:getAgentCryptoInfoVOResponse" name="getAgentCryptoInfoVOResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getCommCheckDate" parameterOrder="self">
      <input message="intf:getCommCheckDateRequest" name="getCommCheckDateRequest"/>
      <output message="intf:getCommCheckDateResponse" name="getCommCheckDateResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="setCustomer" parameterOrder="self customer">
      <input message="intf:setCustomerRequest" name="setCustomerRequest"/>
      <output message="intf:setCustomerResponse" name="setCustomerResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:LegacyException" name="LegacyException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getDeviceGroups" parameterOrder="self">
      <input message="intf:getDeviceGroupsRequest" name="getDeviceGroupsRequest"/>
      <output message="intf:getDeviceGroupsResponse" name="getDeviceGroupsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getAvailableServerModules" parameterOrder="self">
      <input message="intf:getAvailableServerModulesRequest" name="getAvailableServerModulesRequest"/>
      <output message="intf:getAvailableServerModulesResponse" name="getAvailableServerModulesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getServerHardwareVOs" parameterOrder="selves">
      <input message="intf:getServerHardwareVOsRequest" name="getServerHardwareVOsRequest"/>
      <output message="intf:getServerHardwareVOsResponse" name="getServerHardwareVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="runAgentCommTest" parameterOrder="selves">
      <input message="intf:runAgentCommTestRequest" name="runAgentCommTestRequest"/>
      <output message="intf:runAgentCommTestResponse" name="runAgentCommTestResponse"/>
      <fault message="intf:JobException" name="JobException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="setPrimaryInterface" parameterOrder="self slot">
      <input message="intf:setPrimaryInterfaceRequest" name="setPrimaryInterfaceRequest"/>
      <output message="intf:setPrimaryInterfaceResponse" name="setPrimaryInterfaceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:LegacyException" name="LegacyException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getInstalledService" parameterOrder="self">
      <input message="intf:getInstalledServiceRequest" name="getInstalledServiceRequest"/>
      <output message="intf:getInstalledServiceResponse" name="getInstalledServiceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getSoftwareRollbackPoints" parameterOrder="self">
      <input message="intf:getSoftwareRollbackPointsRequest" name="getSoftwareRollbackPointsRequest"/>
      <output message="intf:getSoftwareRollbackPointsResponse" name="getSoftwareRollbackPointsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getServerStages">
      <input message="intf:getServerStagesRequest" name="getServerStagesRequest"/>
      <output message="intf:getServerStagesResponse" name="getServerStagesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="checkDuplex" parameterOrder="selves">
      <input message="intf:checkDuplexRequest" name="checkDuplexRequest"/>
      <output message="intf:checkDuplexResponse" name="checkDuplexResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getPorts" parameterOrder="self">
      <input message="intf:getPortsRequest" name="getPortsRequest"/>
      <output message="intf:getPortsResponse" name="getPortsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getPhysicalDisks" parameterOrder="self">
      <input message="intf:getPhysicalDisksRequest" name="getPhysicalDisksRequest"/>
      <output message="intf:getPhysicalDisksResponse" name="getPhysicalDisksResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getProtocolControllers" parameterOrder="self">
      <input message="intf:getProtocolControllersRequest" name="getProtocolControllersRequest"/>
      <output message="intf:getProtocolControllersResponse" name="getProtocolControllersResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getVirtualServerRefs" parameterOrder="self">
      <input message="intf:getVirtualServerRefsRequest" name="getVirtualServerRefsRequest"/>
      <output message="intf:getVirtualServerRefsResponse" name="getVirtualServerRefsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="addDeviceGroups" parameterOrder="self groups">
      <input message="intf:addDeviceGroupsRequest" name="addDeviceGroupsRequest"/>
      <output message="intf:addDeviceGroupsResponse" name="addDeviceGroupsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getServerVO" parameterOrder="self">
      <input message="intf:getServerVORequest" name="getServerVORequest"/>
      <output message="intf:getServerVOResponse" name="getServerVOResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getInstalledSoftware" parameterOrder="self">
      <input message="intf:getInstalledSoftwareRequest" name="getInstalledSoftwareRequest"/>
      <output message="intf:getInstalledSoftwareResponse" name="getInstalledSoftwareResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="decommission" parameterOrder="self">
      <input message="intf:decommissionRequest" name="decommissionRequest"/>
      <output message="intf:decommissionResponse" name="decommissionResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:LegacyException" name="LegacyException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="removeDeviceGroups" parameterOrder="self groups">
      <input message="intf:removeDeviceGroupsRequest" name="removeDeviceGroupsRequest"/>
      <output message="intf:removeDeviceGroupsResponse" name="removeDeviceGroupsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageAgents" parameterOrder="self">
      <input message="intf:getStorageAgentsRequest" name="getStorageAgentsRequest"/>
      <output message="intf:getStorageAgentsResponse" name="getStorageAgentsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getServerUses">
      <input message="intf:getServerUsesRequest" name="getServerUsesRequest"/>
      <output message="intf:getServerUsesResponse" name="getServerUsesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="getServerVOs" parameterOrder="selves">
      <input message="intf:getServerVOsRequest" name="getServerVOsRequest"/>
      <output message="intf:getServerVOsResponse" name="getServerVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="findServerRefsBySubnet" parameterOrder="ip netmask">
      <input message="intf:findServerRefsBySubnetRequest" name="findServerRefsBySubnetRequest"/>
      <output message="intf:findServerRefsBySubnetResponse" name="findServerRefsBySubnetResponse"/>
      <fault message="intf:SearchException" name="SearchException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getAgentCryptoInfoVOs" parameterOrder="selves">
      <input message="intf:getAgentCryptoInfoVOsRequest" name="getAgentCryptoInfoVOsRequest"/>
      <output message="intf:getAgentCryptoInfoVOsResponse" name="getAgentCryptoInfoVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getServerHardwareVO" parameterOrder="self">
      <input message="intf:getServerHardwareVORequest" name="getServerHardwareVORequest"/>
      <output message="intf:getServerHardwareVOResponse" name="getServerHardwareVOResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getCustAttrDetailLists" parameterOrder="selves keys scope all">
      <input message="intf:getCustAttrDetailListsRequest" name="getCustAttrDetailListsRequest"/>
      <output message="intf:getCustAttrDetailListsResponse" name="getCustAttrDetailListsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="findServerRefs" parameterOrder="filter">
      <input message="intf:findServerRefsRequest" name="findServerRefsRequest"/>
      <output message="intf:findServerRefsResponse" name="findServerRefsResponse"/>
      <fault message="intf:SearchException" name="SearchException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="getHostedManagers" parameterOrder="self">
      <input message="intf:getHostedManagersRequest" name="getHostedManagersRequest"/>
      <output message="intf:getHostedManagersResponse" name="getHostedManagersResponse"/>
      <fault message="intf:SearchException" name="SearchException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="remove" parameterOrder="self">
      <input message="intf:removeRequest" name="removeRequest"/>
      <output message="intf:removeResponse" name="removeResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:LegacyException" name="LegacyException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="create" parameterOrder="vo">
      <input message="intf:createRequest" name="createRequest"/>
      <output message="intf:createResponse" name="createResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:MissingRequiredFieldException" name="MissingRequiredFieldException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ReadOnlyException" name="ReadOnlyException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="merge" parameterOrder="self sourceServerRef">
      <input message="intf:mergeRequest" name="mergeRequest"/>
      <output message="intf:mergeResponse" name="mergeResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:LegacyException" name="LegacyException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="update" parameterOrder="self vo force refetch">
      <input message="intf:updateRequest" name="updateRequest"/>
      <output message="intf:updateResponse" name="updateResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ConstraintException" name="ConstraintException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ModifiedException" name="ModifiedException"/>
    </operation>
    <operation name="modifiedSince" parameterOrder="self since">
      <input message="intf:modifiedSinceRequest" name="modifiedSinceRequest"/>
      <output message="intf:modifiedSinceResponse" name="modifiedSinceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="removeCustAttr" parameterOrder="self key">
      <input message="intf:removeCustAttrRequest" name="removeCustAttrRequest"/>
      <output message="intf:removeCustAttrResponse" name="removeCustAttrResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="removeCustAttrNS" parameterOrder="self namespace key">
      <input message="intf:removeCustAttrRequest1" name="removeCustAttrRequest1"/>
      <output message="intf:removeCustAttrResponse1" name="removeCustAttrResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="clearCustAttrs" parameterOrder="self">
      <input message="intf:clearCustAttrsRequest" name="clearCustAttrsRequest"/>
      <output message="intf:clearCustAttrsResponse" name="clearCustAttrsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="clearCustAttrsNS" parameterOrder="self namespace">
      <input message="intf:clearCustAttrsRequest1" name="clearCustAttrsRequest1"/>
      <output message="intf:clearCustAttrsResponse1" name="clearCustAttrsResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="setCustAttr" parameterOrder="self key value">
      <input message="intf:setCustAttrRequest" name="setCustAttrRequest"/>
      <output message="intf:setCustAttrResponse" name="setCustAttrResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="setCustAttrNS" parameterOrder="self namespace key value">
      <input message="intf:setCustAttrRequest1" name="setCustAttrRequest1"/>
      <output message="intf:setCustAttrResponse1" name="setCustAttrResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustAttrKeys" parameterOrder="self">
      <input message="intf:getCustAttrKeysRequest" name="getCustAttrKeysRequest"/>
      <output message="intf:getCustAttrKeysResponse" name="getCustAttrKeysResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustAttrKeysNS" parameterOrder="self namespace">
      <input message="intf:getCustAttrKeysRequest1" name="getCustAttrKeysRequest1"/>
      <output message="intf:getCustAttrKeysResponse1" name="getCustAttrKeysResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustAttr" parameterOrder="self key useScope">
      <input message="intf:getCustAttrRequest" name="getCustAttrRequest"/>
      <output message="intf:getCustAttrResponse" name="getCustAttrResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustAttrNS" parameterOrder="self namespace key useScope">
      <input message="intf:getCustAttrRequest1" name="getCustAttrRequest1"/>
      <output message="intf:getCustAttrResponse1" name="getCustAttrResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="setCustomField" parameterOrder="self fieldName value">
      <input message="intf:setCustomFieldRequest" name="setCustomFieldRequest"/>
      <output message="intf:setCustomFieldResponse" name="setCustomFieldResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTypeException" name="InvalidTypeException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="setCustomFieldNS" parameterOrder="self namespace fieldName value">
      <input message="intf:setCustomFieldRequest4" name="setCustomFieldRequest4"/>
      <output message="intf:setCustomFieldResponse4" name="setCustomFieldResponse4"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTypeException" name="InvalidTypeException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldUnit" parameterOrder="self fieldName">
      <input message="intf:getCustomFieldUnitRequest" name="getCustomFieldUnitRequest"/>
      <output message="intf:getCustomFieldUnitResponse" name="getCustomFieldUnitResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldUnitNS" parameterOrder="self namespace fieldName">
      <input message="intf:getCustomFieldUnitRequest1" name="getCustomFieldUnitRequest1"/>
      <output message="intf:getCustomFieldUnitResponse1" name="getCustomFieldUnitResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomField" parameterOrder="self fieldName">
      <input message="intf:getCustomFieldRequest" name="getCustomFieldRequest"/>
      <output message="intf:getCustomFieldResponse" name="getCustomFieldResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldNS" parameterOrder="self namespace fieldName">
      <input message="intf:getCustomFieldRequest1" name="getCustomFieldRequest1"/>
      <output message="intf:getCustomFieldResponse1" name="getCustomFieldResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getVirtualColumns">
      <input message="intf:getVirtualColumnsRequest" name="getVirtualColumnsRequest"/>
      <output message="intf:getVirtualColumnsResponse" name="getVirtualColumnsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="getVirtualColumnsNS" parameterOrder="namespace">
      <input message="intf:getVirtualColumnsRequest1" name="getVirtualColumnsRequest1"/>
      <output message="intf:getVirtualColumnsResponse1" name="getVirtualColumnsResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="findVirtualColumnRef" parameterOrder="self fieldName">
      <input message="intf:findVirtualColumnRefRequest" name="findVirtualColumnRefRequest"/>
      <output message="intf:findVirtualColumnRefResponse" name="findVirtualColumnRefResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="findVirtualColumnRefNS" parameterOrder="self namespace fieldName">
      <input message="intf:findVirtualColumnRefRequest1" name="findVirtualColumnRefRequest1"/>
      <output message="intf:findVirtualColumnRefResponse1" name="findVirtualColumnRefResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldDate" parameterOrder="self fieldName">
      <input message="intf:getCustomFieldDateRequest" name="getCustomFieldDateRequest"/>
      <output message="intf:getCustomFieldDateResponse" name="getCustomFieldDateResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldDateNS" parameterOrder="self namespace fieldName">
      <input message="intf:getCustomFieldDateRequest1" name="getCustomFieldDateRequest1"/>
      <output message="intf:getCustomFieldDateResponse1" name="getCustomFieldDateResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldString" parameterOrder="self fieldName">
      <input message="intf:getCustomFieldStringRequest" name="getCustomFieldStringRequest"/>
      <output message="intf:getCustomFieldStringResponse" name="getCustomFieldStringResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldStringNS" parameterOrder="self namespace fieldName">
      <input message="intf:getCustomFieldStringRequest1" name="getCustomFieldStringRequest1"/>
      <output message="intf:getCustomFieldStringResponse1" name="getCustomFieldStringResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="createVirtualColumn" parameterOrder="vo">
      <input message="intf:createVirtualColumnRequest" name="createVirtualColumnRequest"/>
      <output message="intf:createVirtualColumnResponse" name="createVirtualColumnResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:MissingRequiredFieldException" name="MissingRequiredFieldException"/>
      <fault message="intf:ReadOnlyException" name="ReadOnlyException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="attachVirtualColumn" parameterOrder="virtualColumn">
      <input message="intf:attachVirtualColumnRequest" name="attachVirtualColumnRequest"/>
      <output message="intf:attachVirtualColumnResponse" name="attachVirtualColumnResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldLong" parameterOrder="self fieldName">
      <input message="intf:getCustomFieldLongRequest" name="getCustomFieldLongRequest"/>
      <output message="intf:getCustomFieldLongResponse" name="getCustomFieldLongResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getCustomFieldLongNS" parameterOrder="self namespace fieldName">
      <input message="intf:getCustomFieldLongRequest1" name="getCustomFieldLongRequest1"/>
      <output message="intf:getCustomFieldLongResponse1" name="getCustomFieldLongResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:NoSuchFieldException" name="NoSuchFieldException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="detachVirtualColumn" parameterOrder="virtualColumn">
      <input message="intf:detachVirtualColumnRequest" name="detachVirtualColumnRequest"/>
      <output message="intf:detachVirtualColumnResponse" name="detachVirtualColumnResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getDashboardTestResults" parameterOrder="selves tests">
      <input message="intf:getDashboardTestResultsRequest1" name="getDashboardTestResultsRequest1"/>
      <output message="intf:getDashboardTestResultsResponse1" name="getDashboardTestResultsResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getDashboardTestResultMatrix" parameterOrder="selves tests">
      <input message="intf:getDashboardTestResultMatrixRequest" name="getDashboardTestResultMatrixRequest"/>
      <output message="intf:getDashboardTestResultMatrixResponse" name="getDashboardTestResultMatrixResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getDashboardTestResult" parameterOrder="self test">
      <input message="intf:getDashboardTestResultRequest" name="getDashboardTestResultRequest"/>
      <output message="intf:getDashboardTestResultResponse" name="getDashboardTestResultResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getCustAttrsWithRC" parameterOrder="self">
      <input message="intf:getCustAttrsWithRCRequest" name="getCustAttrsWithRCRequest"/>
      <output message="intf:getCustAttrsWithRCResponse" name="getCustAttrsWithRCResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="startConfigurationRestore2" parameterOrder="self backup restoreType">
      <input message="intf:startConfigurationRestoreRequest" name="startConfigurationRestoreRequest"/>
      <output message="intf:startConfigurationRestoreResponse" name="startConfigurationRestoreResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="startConfigurationRestore" parameterOrder="self backup">
      <input message="intf:startConfigurationRestoreRequest1" name="startConfigurationRestoreRequest1"/>
      <output message="intf:startConfigurationRestoreResponse1" name="startConfigurationRestoreResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="getCombinedValueSet" parameterOrder="self cfg instanceName templateRef configFileText">
      <input message="intf:getCombinedValueSetRequest" name="getCombinedValueSetRequest"/>
      <output message="intf:getCombinedValueSetResponse" name="getCombinedValueSetResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:CMLFileParsingException" name="CMLFileParsingException"/>
      <fault message="intf:CMLTemplateSyntaxException" name="CMLTemplateSyntaxException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="scanConfiguration" parameterOrder="self instName">
      <input message="intf:scanConfigurationRequest" name="scanConfigurationRequest"/>
      <output message="intf:scanConfigurationResponse" name="scanConfigurationResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="startConfigurationScan" parameterOrder="selves userTag notification schedule">
      <input message="intf:startConfigurationScanRequest" name="startConfigurationScanRequest"/>
      <output message="intf:startConfigurationScanResponse" name="startConfigurationScanResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="restoreConfiguration2" parameterOrder="self backup restoreType">
      <input message="intf:restoreConfigurationRequest" name="restoreConfigurationRequest"/>
      <output message="intf:restoreConfigurationResponse" name="restoreConfigurationResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="restoreConfiguration" parameterOrder="self backup">
      <input message="intf:restoreConfigurationRequest1" name="restoreConfigurationRequest1"/>
      <output message="intf:restoreConfigurationResponse1" name="restoreConfigurationResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="scanConfigurations" parameterOrder="selves">
      <input message="intf:scanConfigurationsRequest" name="scanConfigurationsRequest"/>
      <output message="intf:scanConfigurationsResponse" name="scanConfigurationsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="executeManipulationScript" parameterOrder="self instName">
      <input message="intf:executeManipulationScriptRequest" name="executeManipulationScriptRequest"/>
      <output message="intf:executeManipulationScriptResponse" name="executeManipulationScriptResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="removeConfigBackups" parameterOrder="self appInst startDate endDate">
      <input message="intf:removeConfigBackupsRequest" name="removeConfigBackupsRequest"/>
      <output message="intf:removeConfigBackupsResponse" name="removeConfigBackupsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="readConfigFile" parameterOrder="self path encoding">
      <input message="intf:readConfigFileRequest" name="readConfigFileRequest"/>
      <output message="intf:readConfigFileResponse" name="readConfigFileResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:SpokeCommException" name="SpokeCommException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:SpokeIOException" name="SpokeIOException"/>
    </operation>
    <operation name="readConfigBackupContents" parameterOrder="self configBackupRef readLiveFile">
      <input message="intf:readConfigBackupContentsRequest" name="readConfigBackupContentsRequest"/>
      <output message="intf:readConfigBackupContentsResponse" name="readConfigBackupContentsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ServerUnavailableException" name="ServerUnavailableException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getConfigBackupVOs" parameterOrder="self">
      <input message="intf:getConfigBackupVOsRequest" name="getConfigBackupVOsRequest"/>
      <output message="intf:getConfigBackupVOsResponse" name="getConfigBackupVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getScopedConfigurableVOs" parameterOrder="self">
      <input message="intf:getScopedConfigurableVOsRequest" name="getScopedConfigurableVOsRequest"/>
      <output message="intf:getScopedConfigurableVOsResponse" name="getScopedConfigurableVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getApplicationInstanceVO" parameterOrder="self instName">
      <input message="intf:getApplicationInstanceVORequest" name="getApplicationInstanceVORequest"/>
      <output message="intf:getApplicationInstanceVOResponse" name="getApplicationInstanceVOResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="findScheduledPushJobs" parameterOrder="self instName">
      <input message="intf:findScheduledPushJobsRequest" name="findScheduledPushJobsRequest"/>
      <output message="intf:findScheduledPushJobsResponse" name="findScheduledPushJobsResponse"/>
      <fault message="intf:InvalidParameterException" name="InvalidParameterException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getApplicationInstances" parameterOrder="self">
      <input message="intf:getApplicationInstancesRequest" name="getApplicationInstancesRequest"/>
      <output message="intf:getApplicationInstancesResponse" name="getApplicationInstancesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="pushConfiguration" parameterOrder="self instName">
      <input message="intf:pushConfigurationRequest" name="pushConfigurationRequest"/>
      <output message="intf:pushConfigurationResponse" name="pushConfigurationResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
    </operation>
    <operation name="createAppInstance" parameterOrder="self instName typeId">
      <input message="intf:createAppInstanceRequest" name="createAppInstanceRequest"/>
      <output message="intf:createAppInstanceResponse" name="createAppInstanceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="deleteAppInstance" parameterOrder="self instName">
      <input message="intf:deleteAppInstanceRequest" name="deleteAppInstanceRequest"/>
      <output message="intf:deleteAppInstanceResponse" name="deleteAppInstanceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startConfigurationPush" parameterOrder="self instName userTag notification schedule">
      <input message="intf:startConfigurationPushRequest" name="startConfigurationPushRequest"/>
      <output message="intf:startConfigurationPushResponse" name="startConfigurationPushResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ACInternalException" name="ACInternalException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="bulkUpdate" parameterOrder="configs force refetch">
      <input message="intf:bulkUpdateRequest" name="bulkUpdateRequest"/>
      <output message="intf:bulkUpdateResponse" name="bulkUpdateResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:InvalidAppInstException" name="InvalidAppInstException"/>
      <fault message="intf:ModifiedException" name="ModifiedException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getConfigurableVO" parameterOrder="self">
      <input message="intf:getConfigurableVORequest" name="getConfigurableVORequest"/>
      <output message="intf:getConfigurableVOResponse" name="getConfigurableVOResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="detachAllConfigurations" parameterOrder="selves force">
      <input message="intf:detachAllConfigurationsRequest" name="detachAllConfigurationsRequest"/>
      <output message="intf:detachAllConfigurationsResponse" name="detachAllConfigurationsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:InvalidAppInstException" name="InvalidAppInstException"/>
      <fault message="intf:ModifiedException" name="ModifiedException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="updateConfigurable" parameterOrder="self vo force refetch">
      <input message="intf:updateConfigurableRequest" name="updateConfigurableRequest"/>
      <output message="intf:updateConfigurableResponse" name="updateConfigurableResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:InvalidAppInstException" name="InvalidAppInstException"/>
      <fault message="intf:ModifiedException" name="ModifiedException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getConfigurableVOs" parameterOrder="selves">
      <input message="intf:getConfigurableVOsRequest" name="getConfigurableVOsRequest"/>
      <output message="intf:getConfigurableVOsResponse" name="getConfigurableVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startOSSequence" parameterOrder="self params userTag notification schedule">
      <input message="intf:startOSSequenceRequest" name="startOSSequenceRequest"/>
      <output message="intf:startOSSequenceResponse" name="startOSSequenceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ConstraintException" name="ConstraintException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:InvalidTypeException" name="InvalidTypeException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getLogEntries" parameterOrder="self begin end ascending">
      <input message="intf:getLogEntriesRequest" name="getLogEntriesRequest"/>
      <output message="intf:getLogEntriesResponse" name="getLogEntriesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startRemediate" parameterOrder="self policies userTag notification schedule">
      <input message="intf:startRemediateRequest" name="startRemediateRequest"/>
      <output message="intf:startRemediateResponse" name="startRemediateResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTemplateUseException" name="InvalidTemplateUseException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getPolicyAttachableStates" parameterOrder="selves">
      <input message="intf:getPolicyAttachableStatesRequest" name="getPolicyAttachableStatesRequest"/>
      <output message="intf:getPolicyAttachableStatesResponse" name="getPolicyAttachableStatesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="startUninstallPackage" parameterOrder="self packageInfos userTag notification schedule">
      <input message="intf:startUninstallPackageRequest" name="startUninstallPackageRequest"/>
      <output message="intf:startUninstallPackageResponse" name="startUninstallPackageResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startFullRemediateNow" parameterOrder="self">
      <input message="intf:startFullRemediateNowRequest" name="startFullRemediateNowRequest"/>
      <output message="intf:startFullRemediateNowResponse" name="startFullRemediateNowResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTemplateUseException" name="InvalidTemplateUseException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startRemediateNow" parameterOrder="self policies">
      <input message="intf:startRemediateNowRequest" name="startRemediateNowRequest"/>
      <output message="intf:startRemediateNowResponse" name="startRemediateNowResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTemplateUseException" name="InvalidTemplateUseException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getSoftwarePolicies" parameterOrder="selves">
      <input message="intf:getSoftwarePoliciesRequest" name="getSoftwarePoliciesRequest"/>
      <output message="intf:getSoftwarePoliciesResponse" name="getSoftwarePoliciesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getSoftwarePolicyAssociations" parameterOrder="self">
      <input message="intf:getSoftwarePolicyAssociationsRequest" name="getSoftwarePolicyAssociationsRequest"/>
      <output message="intf:getSoftwarePolicyAssociationsResponse" name="getSoftwarePolicyAssociationsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="startInstallSoftware" parameterOrder="self installables userTag notification schedule">
      <input message="intf:startInstallSoftwareRequest" name="startInstallSoftwareRequest"/>
      <output message="intf:startInstallSoftwareResponse" name="startInstallSoftwareResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startInstallSoftwarePolicyTemplateNow" parameterOrder="self policies">
      <input message="intf:startInstallSoftwarePolicyTemplateNowRequest" name="startInstallSoftwarePolicyTemplateNowRequest"/>
      <output message="intf:startInstallSoftwarePolicyTemplateNowResponse" name="startInstallSoftwarePolicyTemplateNowResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTemplateUseException" name="InvalidTemplateUseException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:CustomerConstraintException" name="CustomerConstraintException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="attachPolicies" parameterOrder="self policies">
      <input message="intf:attachPoliciesRequest" name="attachPoliciesRequest"/>
      <output message="intf:attachPoliciesResponse" name="attachPoliciesResponse"/>
      <fault message="intf:PlatformConstraintException" name="PlatformConstraintException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:InvalidTemplateUseException" name="InvalidTemplateUseException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:CustomerConstraintException" name="CustomerConstraintException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startUninstallSoftware" parameterOrder="self installables userTag notification schedule">
      <input message="intf:startUninstallSoftwareRequest" name="startUninstallSoftwareRequest"/>
      <output message="intf:startUninstallSoftwareResponse" name="startUninstallSoftwareResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startReboot" parameterOrder="selves userTag notification schedule">
      <input message="intf:startRebootRequest" name="startRebootRequest"/>
      <output message="intf:startRebootResponse" name="startRebootResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startScanPatchPolicyCompliance" parameterOrder="selves">
      <input message="intf:startScanPatchPolicyComplianceRequest" name="startScanPatchPolicyComplianceRequest"/>
      <output message="intf:startScanPatchPolicyComplianceResponse" name="startScanPatchPolicyComplianceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:JobException" name="JobException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="startScanSoftwarePolicyCompliance" parameterOrder="selves">
      <input message="intf:startScanSoftwarePolicyComplianceRequest" name="startScanSoftwarePolicyComplianceRequest"/>
      <output message="intf:startScanSoftwarePolicyComplianceResponse" name="startScanSoftwarePolicyComplianceResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:JobException" name="JobException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="detachPolicies" parameterOrder="self policies">
      <input message="intf:detachPoliciesRequest" name="detachPoliciesRequest"/>
      <output message="intf:detachPoliciesResponse" name="detachPoliciesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getComplianceScans" parameterOrder="self">
      <input message="intf:getComplianceScansRequest" name="getComplianceScansRequest"/>
      <output message="intf:getComplianceScansResponse" name="getComplianceScansResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getComplianceScanStates" parameterOrder="self scans">
      <input message="intf:getComplianceScanStatesRequest" name="getComplianceScanStatesRequest"/>
      <output message="intf:getComplianceScanStatesResponse" name="getComplianceScanStatesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getComplianceScanSummaries" parameterOrder="self scans">
      <input message="intf:getComplianceScanSummariesRequest" name="getComplianceScanSummariesRequest"/>
      <output message="intf:getComplianceScanSummariesResponse" name="getComplianceScanSummariesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getComplianceScanSummary" parameterOrder="self scan">
      <input message="intf:getComplianceScanSummaryRequest" name="getComplianceScanSummaryRequest"/>
      <output message="intf:getComplianceScanSummaryResponse" name="getComplianceScanSummaryResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
    </operation>
    <operation name="getStorageTargets" parameterOrder="self">
      <input message="intf:getStorageTargetsRequest" name="getStorageTargetsRequest"/>
      <output message="intf:getStorageTargetsResponse" name="getStorageTargetsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageInitiatorTargetViews" parameterOrder="self">
      <input message="intf:getStorageInitiatorTargetViewsRequest" name="getStorageInitiatorTargetViewsRequest"/>
      <output message="intf:getStorageInitiatorTargetViewsResponse" name="getStorageInitiatorTargetViewsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageInitiatorVolumes" parameterOrder="self">
      <input message="intf:getStorageInitiatorVolumesRequest" name="getStorageInitiatorVolumesRequest"/>
      <output message="intf:getStorageInitiatorVolumesResponse" name="getStorageInitiatorVolumesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageInitiatorUnmountedVolumes" parameterOrder="self">
      <input message="intf:getStorageInitiatorUnmountedVolumesRequest" name="getStorageInitiatorUnmountedVolumesRequest"/>
      <output message="intf:getStorageInitiatorUnmountedVolumesResponse" name="getStorageInitiatorUnmountedVolumesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageInitiatorServices" parameterOrder="self">
      <input message="intf:getStorageInitiatorServicesRequest" name="getStorageInitiatorServicesRequest"/>
      <output message="intf:getStorageInitiatorServicesResponse" name="getStorageInitiatorServicesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageTargetVolumes" parameterOrder="self">
      <input message="intf:getStorageTargetVolumesRequest" name="getStorageTargetVolumesRequest"/>
      <output message="intf:getStorageTargetVolumesResponse" name="getStorageTargetVolumesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageInitiators" parameterOrder="self">
      <input message="intf:getStorageInitiatorsRequest" name="getStorageInitiatorsRequest"/>
      <output message="intf:getStorageInitiatorsResponse" name="getStorageInitiatorsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageTargetInitiatorViews" parameterOrder="self">
      <input message="intf:getStorageTargetInitiatorViewsRequest" name="getStorageTargetInitiatorViewsRequest"/>
      <output message="intf:getStorageTargetInitiatorViewsResponse" name="getStorageTargetInitiatorViewsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageTargetServices" parameterOrder="self">
      <input message="intf:getStorageTargetServicesRequest" name="getStorageTargetServicesRequest"/>
      <output message="intf:getStorageTargetServicesResponse" name="getStorageTargetServicesResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageConnectionInfoVOs" parameterOrder="self">
      <input message="intf:getStorageConnectionInfoVOsRequest" name="getStorageConnectionInfoVOsRequest"/>
      <output message="intf:getStorageConnectionInfoVOsResponse" name="getStorageConnectionInfoVOsResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="getStorageConnectionInfoVOsByType" parameterOrder="self scannerType">
      <input message="intf:getStorageConnectionInfoVOsRequest1" name="getStorageConnectionInfoVOsRequest1"/>
      <output message="intf:getStorageConnectionInfoVOsResponse1" name="getStorageConnectionInfoVOsResponse1"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="updateStorageConnectionInfo" parameterOrder="self vo force refetch">
      <input message="intf:updateStorageConnectionInfoRequest" name="updateStorageConnectionInfoRequest"/>
      <output message="intf:updateStorageConnectionInfoResponse" name="updateStorageConnectionInfoResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ConstraintException" name="ConstraintException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:ModifiedException" name="ModifiedException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="createStorageConnectionInfo" parameterOrder="self vo">
      <input message="intf:createStorageConnectionInfoRequest" name="createStorageConnectionInfoRequest"/>
      <output message="intf:createStorageConnectionInfoResponse" name="createStorageConnectionInfoResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ConstraintException" name="ConstraintException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="removeStorageConnectionInfo" parameterOrder="self storageConnectionInfo">
      <input message="intf:removeStorageConnectionInfoRequest" name="removeStorageConnectionInfoRequest"/>
      <output message="intf:removeStorageConnectionInfoResponse" name="removeStorageConnectionInfoResponse"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
      <fault message="intf:ConstraintException" name="ConstraintException"/>
      <fault message="intf:NotFoundException" name="NotFoundException"/>
      <fault message="intf:IllegalValueException" name="IllegalValueException"/>
    </operation>
    <operation name="findManagersOfType" parameterOrder="self mgrType">
      <input message="intf:findManagersOfTypeRequest" name="findManagersOfTypeRequest"/>
      <output message="intf:findManagersOfTypeResponse" name="findManagersOfTypeResponse"/>
      <fault message="intf:SearchException" name="SearchException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
    <operation name="getManagers" parameterOrder="self">
      <input message="intf:getManagersRequest" name="getManagersRequest"/>
      <output message="intf:getManagersResponse" name="getManagersResponse"/>
      <fault message="intf:SearchException" name="SearchException"/>
      <fault message="intf:AuthorizationException" name="AuthorizationException"/>
    </operation>
  </portType>
  <binding name="ServerServiceEndpointSoapBinding" type="intf:ServerService">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="isStorageExtensionEnabled">
      <wsdlsoap:operation soapAction=""/>
      <input name="isStorageExtensionEnabledRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="isStorageExtensionEnabledResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiator">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageServices">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageServicesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageServicesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getAgentCryptoInfoVO">
      <wsdlsoap:operation soapAction=""/>
      <input name="getAgentCryptoInfoVORequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getAgentCryptoInfoVOResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCommCheckDate">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCommCheckDateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCommCheckDateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setCustomer">
      <wsdlsoap:operation soapAction=""/>
      <input name="setCustomerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setCustomerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="LegacyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="LegacyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getDeviceGroups">
      <wsdlsoap:operation soapAction=""/>
      <input name="getDeviceGroupsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getDeviceGroupsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getAvailableServerModules">
      <wsdlsoap:operation soapAction=""/>
      <input name="getAvailableServerModulesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getAvailableServerModulesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerHardwareVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerHardwareVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerHardwareVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="runAgentCommTest">
      <wsdlsoap:operation soapAction=""/>
      <input name="runAgentCommTestRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="runAgentCommTestResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="JobException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="JobException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setPrimaryInterface">
      <wsdlsoap:operation soapAction=""/>
      <input name="setPrimaryInterfaceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setPrimaryInterfaceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="LegacyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="LegacyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getInstalledService">
      <wsdlsoap:operation soapAction=""/>
      <input name="getInstalledServiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getInstalledServiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getSoftwareRollbackPoints">
      <wsdlsoap:operation soapAction=""/>
      <input name="getSoftwareRollbackPointsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getSoftwareRollbackPointsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerStages">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerStagesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerStagesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="checkDuplex">
      <wsdlsoap:operation soapAction=""/>
      <input name="checkDuplexRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="checkDuplexResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getPorts">
      <wsdlsoap:operation soapAction=""/>
      <input name="getPortsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getPortsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getPhysicalDisks">
      <wsdlsoap:operation soapAction=""/>
      <input name="getPhysicalDisksRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getPhysicalDisksResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getProtocolControllers">
      <wsdlsoap:operation soapAction=""/>
      <input name="getProtocolControllersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getProtocolControllersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getVirtualServerRefs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getVirtualServerRefsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getVirtualServerRefsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="addDeviceGroups">
      <wsdlsoap:operation soapAction=""/>
      <input name="addDeviceGroupsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="addDeviceGroupsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerVO">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerVORequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerVOResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getInstalledSoftware">
      <wsdlsoap:operation soapAction=""/>
      <input name="getInstalledSoftwareRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getInstalledSoftwareResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="decommission">
      <wsdlsoap:operation soapAction=""/>
      <input name="decommissionRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="decommissionResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="LegacyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="LegacyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="removeDeviceGroups">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeDeviceGroupsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeDeviceGroupsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageAgents">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageAgentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageAgentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerUses">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerUsesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerUsesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findServerRefsBySubnet">
      <wsdlsoap:operation soapAction=""/>
      <input name="findServerRefsBySubnetRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findServerRefsBySubnetResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="SearchException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SearchException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getAgentCryptoInfoVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getAgentCryptoInfoVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getAgentCryptoInfoVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getServerHardwareVO">
      <wsdlsoap:operation soapAction=""/>
      <input name="getServerHardwareVORequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getServerHardwareVOResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttrDetailLists">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrDetailListsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrDetailListsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findServerRefs">
      <wsdlsoap:operation soapAction=""/>
      <input name="findServerRefsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findServerRefsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="SearchException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SearchException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getHostedManagers">
      <wsdlsoap:operation soapAction=""/>
      <input name="getHostedManagersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getHostedManagersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="SearchException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SearchException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="remove">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="LegacyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="LegacyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="create">
      <wsdlsoap:operation soapAction=""/>
      <input name="createRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="createResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="MissingRequiredFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="MissingRequiredFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ReadOnlyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ReadOnlyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="merge">
      <wsdlsoap:operation soapAction=""/>
      <input name="mergeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="mergeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="LegacyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="LegacyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="update">
      <wsdlsoap:operation soapAction=""/>
      <input name="updateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="updateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ModifiedException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ModifiedException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="modifiedSince">
      <wsdlsoap:operation soapAction=""/>
      <input name="modifiedSinceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="modifiedSinceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="removeCustAttr">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeCustAttrRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeCustAttrResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="removeCustAttrNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeCustAttrRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeCustAttrResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="clearCustAttrs">
      <wsdlsoap:operation soapAction=""/>
      <input name="clearCustAttrsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="clearCustAttrsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="clearCustAttrsNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="clearCustAttrsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="clearCustAttrsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setCustAttr">
      <wsdlsoap:operation soapAction=""/>
      <input name="setCustAttrRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setCustAttrResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setCustAttrNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="setCustAttrRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setCustAttrResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttrKeys">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrKeysRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrKeysResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttrKeysNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrKeysRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrKeysResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttr">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttrNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setCustomField">
      <wsdlsoap:operation soapAction=""/>
      <input name="setCustomFieldRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setCustomFieldResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTypeException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTypeException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="setCustomFieldNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="setCustomFieldRequest4">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="setCustomFieldResponse4">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTypeException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTypeException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldUnit">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldUnitRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldUnitResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldUnitNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldUnitRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldUnitResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomField">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getVirtualColumns">
      <wsdlsoap:operation soapAction=""/>
      <input name="getVirtualColumnsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getVirtualColumnsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getVirtualColumnsNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getVirtualColumnsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getVirtualColumnsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findVirtualColumnRef">
      <wsdlsoap:operation soapAction=""/>
      <input name="findVirtualColumnRefRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findVirtualColumnRefResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findVirtualColumnRefNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="findVirtualColumnRefRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findVirtualColumnRefResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldDate">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldDateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldDateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldDateNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldDateRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldDateResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldString">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldStringRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldStringResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldStringNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldStringRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldStringResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="createVirtualColumn">
      <wsdlsoap:operation soapAction=""/>
      <input name="createVirtualColumnRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="createVirtualColumnResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="MissingRequiredFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="MissingRequiredFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ReadOnlyException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ReadOnlyException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="attachVirtualColumn">
      <wsdlsoap:operation soapAction=""/>
      <input name="attachVirtualColumnRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="attachVirtualColumnResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldLong">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldLongRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldLongResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustomFieldLongNS">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustomFieldLongRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustomFieldLongResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NoSuchFieldException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NoSuchFieldException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="detachVirtualColumn">
      <wsdlsoap:operation soapAction=""/>
      <input name="detachVirtualColumnRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="detachVirtualColumnResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getDashboardTestResults">
      <wsdlsoap:operation soapAction=""/>
      <input name="getDashboardTestResultsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getDashboardTestResultsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getDashboardTestResultMatrix">
      <wsdlsoap:operation soapAction=""/>
      <input name="getDashboardTestResultMatrixRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getDashboardTestResultMatrixResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getDashboardTestResult">
      <wsdlsoap:operation soapAction=""/>
      <input name="getDashboardTestResultRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getDashboardTestResultResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCustAttrsWithRC">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCustAttrsWithRCRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCustAttrsWithRCResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startConfigurationRestore2">
      <wsdlsoap:operation soapAction=""/>
      <input name="startConfigurationRestoreRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startConfigurationRestoreResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startConfigurationRestore">
      <wsdlsoap:operation soapAction=""/>
      <input name="startConfigurationRestoreRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startConfigurationRestoreResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getCombinedValueSet">
      <wsdlsoap:operation soapAction=""/>
      <input name="getCombinedValueSetRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getCombinedValueSetResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="CMLFileParsingException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="CMLFileParsingException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="CMLTemplateSyntaxException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="CMLTemplateSyntaxException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="scanConfiguration">
      <wsdlsoap:operation soapAction=""/>
      <input name="scanConfigurationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="scanConfigurationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startConfigurationScan">
      <wsdlsoap:operation soapAction=""/>
      <input name="startConfigurationScanRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startConfigurationScanResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="restoreConfiguration2">
      <wsdlsoap:operation soapAction=""/>
      <input name="restoreConfigurationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="restoreConfigurationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="restoreConfiguration">
      <wsdlsoap:operation soapAction=""/>
      <input name="restoreConfigurationRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="restoreConfigurationResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="scanConfigurations">
      <wsdlsoap:operation soapAction=""/>
      <input name="scanConfigurationsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="scanConfigurationsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="executeManipulationScript">
      <wsdlsoap:operation soapAction=""/>
      <input name="executeManipulationScriptRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="executeManipulationScriptResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="removeConfigBackups">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeConfigBackupsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeConfigBackupsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="readConfigFile">
      <wsdlsoap:operation soapAction=""/>
      <input name="readConfigFileRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="readConfigFileResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="SpokeCommException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SpokeCommException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="SpokeIOException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SpokeIOException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="readConfigBackupContents">
      <wsdlsoap:operation soapAction=""/>
      <input name="readConfigBackupContentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="readConfigBackupContentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ServerUnavailableException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ServerUnavailableException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getConfigBackupVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getConfigBackupVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getConfigBackupVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getScopedConfigurableVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getScopedConfigurableVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getScopedConfigurableVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getApplicationInstanceVO">
      <wsdlsoap:operation soapAction=""/>
      <input name="getApplicationInstanceVORequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getApplicationInstanceVOResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findScheduledPushJobs">
      <wsdlsoap:operation soapAction=""/>
      <input name="findScheduledPushJobsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findScheduledPushJobsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="InvalidParameterException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidParameterException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getApplicationInstances">
      <wsdlsoap:operation soapAction=""/>
      <input name="getApplicationInstancesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getApplicationInstancesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="pushConfiguration">
      <wsdlsoap:operation soapAction=""/>
      <input name="pushConfigurationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="pushConfigurationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="createAppInstance">
      <wsdlsoap:operation soapAction=""/>
      <input name="createAppInstanceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="createAppInstanceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="deleteAppInstance">
      <wsdlsoap:operation soapAction=""/>
      <input name="deleteAppInstanceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="deleteAppInstanceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startConfigurationPush">
      <wsdlsoap:operation soapAction=""/>
      <input name="startConfigurationPushRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startConfigurationPushResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ACInternalException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ACInternalException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="bulkUpdate">
      <wsdlsoap:operation soapAction=""/>
      <input name="bulkUpdateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="bulkUpdateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidAppInstException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidAppInstException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ModifiedException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ModifiedException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getConfigurableVO">
      <wsdlsoap:operation soapAction=""/>
      <input name="getConfigurableVORequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getConfigurableVOResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="detachAllConfigurations">
      <wsdlsoap:operation soapAction=""/>
      <input name="detachAllConfigurationsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="detachAllConfigurationsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidAppInstException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidAppInstException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ModifiedException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ModifiedException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="updateConfigurable">
      <wsdlsoap:operation soapAction=""/>
      <input name="updateConfigurableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="updateConfigurableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidAppInstException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidAppInstException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ModifiedException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ModifiedException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getConfigurableVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getConfigurableVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getConfigurableVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startOSSequence">
      <wsdlsoap:operation soapAction=""/>
      <input name="startOSSequenceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startOSSequenceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTypeException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTypeException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getLogEntries">
      <wsdlsoap:operation soapAction=""/>
      <input name="getLogEntriesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getLogEntriesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startRemediate">
      <wsdlsoap:operation soapAction=""/>
      <input name="startRemediateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startRemediateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTemplateUseException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTemplateUseException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getPolicyAttachableStates">
      <wsdlsoap:operation soapAction=""/>
      <input name="getPolicyAttachableStatesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getPolicyAttachableStatesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startUninstallPackage">
      <wsdlsoap:operation soapAction=""/>
      <input name="startUninstallPackageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startUninstallPackageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startFullRemediateNow">
      <wsdlsoap:operation soapAction=""/>
      <input name="startFullRemediateNowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startFullRemediateNowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTemplateUseException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTemplateUseException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startRemediateNow">
      <wsdlsoap:operation soapAction=""/>
      <input name="startRemediateNowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startRemediateNowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTemplateUseException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTemplateUseException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getSoftwarePolicies">
      <wsdlsoap:operation soapAction=""/>
      <input name="getSoftwarePoliciesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getSoftwarePoliciesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getSoftwarePolicyAssociations">
      <wsdlsoap:operation soapAction=""/>
      <input name="getSoftwarePolicyAssociationsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getSoftwarePolicyAssociationsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startInstallSoftware">
      <wsdlsoap:operation soapAction=""/>
      <input name="startInstallSoftwareRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startInstallSoftwareResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startInstallSoftwarePolicyTemplateNow">
      <wsdlsoap:operation soapAction=""/>
      <input name="startInstallSoftwarePolicyTemplateNowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startInstallSoftwarePolicyTemplateNowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTemplateUseException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTemplateUseException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="CustomerConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="CustomerConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="attachPolicies">
      <wsdlsoap:operation soapAction=""/>
      <input name="attachPoliciesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="attachPoliciesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="PlatformConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="PlatformConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="InvalidTemplateUseException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="InvalidTemplateUseException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="CustomerConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="CustomerConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startUninstallSoftware">
      <wsdlsoap:operation soapAction=""/>
      <input name="startUninstallSoftwareRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startUninstallSoftwareResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startReboot">
      <wsdlsoap:operation soapAction=""/>
      <input name="startRebootRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startRebootResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startScanPatchPolicyCompliance">
      <wsdlsoap:operation soapAction=""/>
      <input name="startScanPatchPolicyComplianceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startScanPatchPolicyComplianceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="JobException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="JobException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="startScanSoftwarePolicyCompliance">
      <wsdlsoap:operation soapAction=""/>
      <input name="startScanSoftwarePolicyComplianceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="startScanSoftwarePolicyComplianceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="JobException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="JobException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="detachPolicies">
      <wsdlsoap:operation soapAction=""/>
      <input name="detachPoliciesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="detachPoliciesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getComplianceScans">
      <wsdlsoap:operation soapAction=""/>
      <input name="getComplianceScansRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getComplianceScansResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getComplianceScanStates">
      <wsdlsoap:operation soapAction=""/>
      <input name="getComplianceScanStatesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getComplianceScanStatesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getComplianceScanSummaries">
      <wsdlsoap:operation soapAction=""/>
      <input name="getComplianceScanSummariesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getComplianceScanSummariesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getComplianceScanSummary">
      <wsdlsoap:operation soapAction=""/>
      <input name="getComplianceScanSummaryRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getComplianceScanSummaryResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageTargets">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageTargetsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageTargetsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiatorTargetViews">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorTargetViewsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorTargetViewsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiatorVolumes">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorVolumesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorVolumesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiatorUnmountedVolumes">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorUnmountedVolumesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorUnmountedVolumesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiatorServices">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorServicesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorServicesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageTargetVolumes">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageTargetVolumesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageTargetVolumesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageInitiators">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageInitiatorsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageInitiatorsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageTargetInitiatorViews">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageTargetInitiatorViewsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageTargetInitiatorViewsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageTargetServices">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageTargetServicesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageTargetServicesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageConnectionInfoVOs">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageConnectionInfoVOsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageConnectionInfoVOsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getStorageConnectionInfoVOsByType">
      <wsdlsoap:operation soapAction=""/>
      <input name="getStorageConnectionInfoVOsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getStorageConnectionInfoVOsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="updateStorageConnectionInfo">
      <wsdlsoap:operation soapAction=""/>
      <input name="updateStorageConnectionInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="updateStorageConnectionInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ModifiedException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ModifiedException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="createStorageConnectionInfo">
      <wsdlsoap:operation soapAction=""/>
      <input name="createStorageConnectionInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="createStorageConnectionInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="removeStorageConnectionInfo">
      <wsdlsoap:operation soapAction=""/>
      <input name="removeStorageConnectionInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="removeStorageConnectionInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="ConstraintException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="ConstraintException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="NotFoundException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="NotFoundException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="IllegalValueException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="IllegalValueException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="findManagersOfType">
      <wsdlsoap:operation soapAction=""/>
      <input name="findManagersOfTypeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="findManagersOfTypeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="SearchException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SearchException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
    <operation name="getManagers">
      <wsdlsoap:operation soapAction=""/>
      <input name="getManagersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </input>
      <output name="getManagersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://server.opsware.com" use="encoded"/>
      </output>
      <fault name="SearchException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="SearchException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
      <fault name="AuthorizationException">
        <wsdlsoap:fault encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" name="AuthorizationException" namespace="http://server.opsware.com" use="encoded"/>
      </fault>
    </operation>
  </binding>
  <service name="ServerService">
    <port binding="intf:ServerServiceEndpointSoapBinding" name="ServerServiceEndpoint">
      <wsdlsoap:address location="http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="addDeviceGroups" bindingOperationName="addDeviceGroups" type="Request-Response" outputName="addDeviceGroupsResponse" inputName="addDeviceGroupsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:addDeviceGroups soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long">?</idAsLong>
            <name xsi:type="soapenc:string">?</name>
            <secureResourceTypeName xsi:type="soapenc:string">?</secureResourceTypeName>
         </self>
         <groups xsi:type="ser:ArrayOf_tns5_DeviceGroupRef" soapenc:arrayType="dev:DeviceGroupRef[]" xmlns:dev="http://device.opsware.com"/>
      </ser:addDeviceGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/addDeviceGroupsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="attachPolicies" bindingOperationName="attachPolicies" type="Request-Response" outputName="attachPoliciesResponse" inputName="attachPoliciesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:attachPolicies soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <policies xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:attachPolicies>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/attachPoliciesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="attachVirtualColumn" bindingOperationName="attachVirtualColumn" type="Request-Response" outputName="attachVirtualColumnResponse" inputName="attachVirtualColumnRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:attachVirtualColumn soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <virtualColumn xsi:type="cus:VirtualColumnRef" xmlns:cus="http://custattr.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
         </virtualColumn>
      </ser:attachVirtualColumn>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/attachVirtualColumnRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="bulkUpdate" bindingOperationName="bulkUpdate" type="Request-Response" outputName="bulkUpdateResponse" inputName="bulkUpdateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:bulkUpdate soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <configs xsi:type="ser:ArrayOf_tns12_ConfigurableVO" soapenc:arrayType="acm:ConfigurableVO[]" xmlns:acm="http://acm.opsware.com"/>
         <force xsi:type="xsd:boolean">?</force>
         <refetch xsi:type="xsd:boolean">?</refetch>
      </ser:bulkUpdate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/bulkUpdateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="checkDuplex" bindingOperationName="checkDuplex" type="Request-Response" outputName="checkDuplexResponse" inputName="checkDuplexRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:checkDuplex soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:checkDuplex>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/checkDuplexRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="clearCustAttrs" bindingOperationName="clearCustAttrs" type="Request-Response" outputName="clearCustAttrsResponse" inputName="clearCustAttrsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:clearCustAttrs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:clearCustAttrs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/clearCustAttrsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="clearCustAttrsNS" bindingOperationName="clearCustAttrsNS" type="Request-Response" outputName="clearCustAttrsResponse1" inputName="clearCustAttrsRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:clearCustAttrsNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
      </ser:clearCustAttrsNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/clearCustAttrsRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="create" bindingOperationName="create" type="Request-Response" outputName="createResponse" inputName="createRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:create soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <vo xsi:type="ser:ServerVO">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <description xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</description>
            <hostName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</hostName>
            <manufacturer xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</manufacturer>
            <model xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</model>
            <osVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osVersion>
            <primaryIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</primaryIP>
            <serialNumber xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</serialNumber>
            <agentVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</agentVersion>
            <codeset xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</codeset>
            <customer xsi:type="loc:CustomerRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </customer>
            <defaultGw xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</defaultGw>
            <discoveredDate xsi:type="xsd:dateTime">?</discoveredDate>
            <facility xsi:type="loc:FacilityRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </facility>
            <firstDetectDate xsi:type="xsd:dateTime">?</firstDetectDate>
            <hypervisor xsi:type="xsd:boolean">?</hypervisor>
            <lastScanDate xsi:type="xsd:dateTime">?</lastScanDate>
            <locale xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</locale>
            <lockInfo xsi:type="ser:LockInfo">
               <comment xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</comment>
               <date xsi:type="xsd:dateTime">?</date>
               <locked xsi:type="xsd:boolean">?</locked>
               <user xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</user>
            </lockInfo>
            <loopbackIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</loopbackIP>
            <managementIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</managementIP>
            <mid xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</mid>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <netBIOSName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</netBIOSName>
            <opswLifecycle xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</opswLifecycle>
            <origin xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</origin>
            <osFlavor xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osFlavor>
            <osSPVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osSPVersion>
            <peerIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</peerIP>
            <platform xsi:type="dev:PlatformRef" xmlns:dev="http://device.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </platform>
            <powerState xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</powerState>
            <previousSWRegDate xsi:type="xsd:dateTime">?</previousSWRegDate>
            <realm xsi:type="loc:RealmRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </realm>
            <rebootRequired xsi:type="xsd:boolean">?</rebootRequired>
            <reporting xsi:type="xsd:boolean">?</reporting>
            <stage xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</stage>
            <state xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</state>
            <use xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</use>
            <virtualizationType xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</virtualizationType>
         </vo>
      </ser:create>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/createRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createAppInstance" bindingOperationName="createAppInstance" type="Request-Response" outputName="createAppInstanceResponse" inputName="createAppInstanceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:createAppInstance soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
         <typeId xsi:type="acm:ConfigurationRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </typeId>
      </ser:createAppInstance>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/createAppInstanceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createStorageConnectionInfo" bindingOperationName="createStorageConnectionInfo" type="Request-Response" outputName="createStorageConnectionInfoResponse" inputName="createStorageConnectionInfoRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:createStorageConnectionInfo soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <vo xsi:type="stor:StorageConnectionInfoVO" xmlns:stor="http://storage.opsware.com">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <template xsi:type="stor:ConnectionInfoTemplate">
               <text xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</text>
               <type xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</type>
               <version xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</version>
            </template>
            <values xsi:type="com:ModifiableMap" xmlns:com="http://common.opsware.com">
               <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
               <empty xsi:type="xsd:boolean">?</empty>
            </values>
         </vo>
      </ser:createStorageConnectionInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/createStorageConnectionInfoRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createVirtualColumn" bindingOperationName="createVirtualColumn" type="Request-Response" outputName="createVirtualColumnResponse" inputName="createVirtualColumnRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:createVirtualColumn soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <vo xsi:type="cus:VirtualColumnVO" xmlns:cus="http://custattr.opsware.com">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <configInfo xsi:type="x-:Map" xmlns:x-="http://xml.apache.org/xml-soap">
               <!--Zero or more repetitions:-->
               <item xsi:type="x-:mapItem">
                  <key xsi:type="xsd:anyType">?</key>
                  <value xsi:type="xsd:anyType">?</value>
               </item>
            </configInfo>
            <displayName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</displayName>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
            <type xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</type>
         </vo>
      </ser:createVirtualColumn>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/createVirtualColumnRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="decommission" bindingOperationName="decommission" type="Request-Response" outputName="decommissionResponse" inputName="decommissionRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:decommission soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:decommission>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/decommissionRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteAppInstance" bindingOperationName="deleteAppInstance" type="Request-Response" outputName="deleteAppInstanceResponse" inputName="deleteAppInstanceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:deleteAppInstance soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:deleteAppInstance>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/deleteAppInstanceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="detachAllConfigurations" bindingOperationName="detachAllConfigurations" type="Request-Response" outputName="detachAllConfigurationsResponse" inputName="detachAllConfigurationsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:detachAllConfigurations soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <force xsi:type="xsd:boolean">?</force>
      </ser:detachAllConfigurations>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/detachAllConfigurationsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="detachPolicies" bindingOperationName="detachPolicies" type="Request-Response" outputName="detachPoliciesResponse" inputName="detachPoliciesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:detachPolicies soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <policies xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:detachPolicies>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/detachPoliciesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="detachVirtualColumn" bindingOperationName="detachVirtualColumn" type="Request-Response" outputName="detachVirtualColumnResponse" inputName="detachVirtualColumnRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:detachVirtualColumn soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <virtualColumn xsi:type="cus:VirtualColumnRef" xmlns:cus="http://custattr.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
         </virtualColumn>
      </ser:detachVirtualColumn>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/detachVirtualColumnRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="executeManipulationScript" bindingOperationName="executeManipulationScript" type="Request-Response" outputName="executeManipulationScriptResponse" inputName="executeManipulationScriptRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:executeManipulationScript soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:executeManipulationScript>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/executeManipulationScriptRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findManagersOfType" bindingOperationName="findManagersOfType" type="Request-Response" outputName="findManagersOfTypeResponse" inputName="findManagersOfTypeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findManagersOfType soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <mgrType xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</mgrType>
      </ser:findManagersOfType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findManagersOfTypeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findScheduledPushJobs" bindingOperationName="findScheduledPushJobs" type="Request-Response" outputName="findScheduledPushJobsResponse" inputName="findScheduledPushJobsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findScheduledPushJobs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:findScheduledPushJobs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findScheduledPushJobsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findServerRefs" bindingOperationName="findServerRefs" type="Request-Response" outputName="findServerRefsResponse" inputName="findServerRefsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://admin:opsware_admin@owc:443/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findServerRefs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <filter xsi:type="sear:Filter" xmlns:sear="http://search.opsware.com">
            <expression xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">ServerVO.name EQUAL_TO "rhel55"</expression>
            <objectType xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">device</objectType>
         </filter>
      </ser:findServerRefs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findServerRefsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findServerRefsBySubnet" bindingOperationName="findServerRefsBySubnet" type="Request-Response" outputName="findServerRefsBySubnetResponse" inputName="findServerRefsBySubnetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findServerRefsBySubnet soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <ip xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</ip>
         <netmask xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</netmask>
      </ser:findServerRefsBySubnet>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findServerRefsBySubnetRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findVirtualColumnRef" bindingOperationName="findVirtualColumnRef" type="Request-Response" outputName="findVirtualColumnRefResponse" inputName="findVirtualColumnRefRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findVirtualColumnRef soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:findVirtualColumnRef>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findVirtualColumnRefRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="findVirtualColumnRefNS" bindingOperationName="findVirtualColumnRefNS" type="Request-Response" outputName="findVirtualColumnRefResponse1" inputName="findVirtualColumnRefRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:findVirtualColumnRefNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:findVirtualColumnRefNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/findVirtualColumnRefRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getAgentCryptoInfoVO" bindingOperationName="getAgentCryptoInfoVO" type="Request-Response" outputName="getAgentCryptoInfoVOResponse" inputName="getAgentCryptoInfoVORequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getAgentCryptoInfoVO soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getAgentCryptoInfoVO>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getAgentCryptoInfoVORequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getAgentCryptoInfoVOs" bindingOperationName="getAgentCryptoInfoVOs" type="Request-Response" outputName="getAgentCryptoInfoVOsResponse" inputName="getAgentCryptoInfoVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getAgentCryptoInfoVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:getAgentCryptoInfoVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getAgentCryptoInfoVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getApplicationInstances" bindingOperationName="getApplicationInstances" type="Request-Response" outputName="getApplicationInstancesResponse" inputName="getApplicationInstancesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getApplicationInstances soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getApplicationInstances>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getApplicationInstancesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getApplicationInstanceVO" bindingOperationName="getApplicationInstanceVO" type="Request-Response" outputName="getApplicationInstanceVOResponse" inputName="getApplicationInstanceVORequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getApplicationInstanceVO soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:getApplicationInstanceVO>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getApplicationInstanceVORequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getAvailableServerModules" bindingOperationName="getAvailableServerModules" type="Request-Response" outputName="getAvailableServerModulesResponse" inputName="getAvailableServerModulesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getAvailableServerModules soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getAvailableServerModules>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getAvailableServerModulesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCombinedValueSet" bindingOperationName="getCombinedValueSet" type="Request-Response" outputName="getCombinedValueSetResponse" inputName="getCombinedValueSetRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCombinedValueSet soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <cfg xsi:type="acm:ConfigurationRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </cfg>
         <instanceName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instanceName>
         <templateRef xsi:type="acm:CMLRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </templateRef>
         <configFileText xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</configFileText>
      </ser:getCombinedValueSet>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCombinedValueSetRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCommCheckDate" bindingOperationName="getCommCheckDate" type="Request-Response" outputName="getCommCheckDateResponse" inputName="getCommCheckDateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCommCheckDate soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getCommCheckDate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCommCheckDateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getComplianceScans" bindingOperationName="getComplianceScans" type="Request-Response" outputName="getComplianceScansResponse" inputName="getComplianceScansRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getComplianceScans soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getComplianceScans>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getComplianceScansRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getComplianceScanStates" bindingOperationName="getComplianceScanStates" type="Request-Response" outputName="getComplianceScanStatesResponse" inputName="getComplianceScanStatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getComplianceScanStates soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <scans xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:getComplianceScanStates>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getComplianceScanStatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getComplianceScanSummaries" bindingOperationName="getComplianceScanSummaries" type="Request-Response" outputName="getComplianceScanSummariesResponse" inputName="getComplianceScanSummariesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getComplianceScanSummaries soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <scans xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:getComplianceScanSummaries>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getComplianceScanSummariesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getComplianceScanSummary" bindingOperationName="getComplianceScanSummary" type="Request-Response" outputName="getComplianceScanSummaryResponse" inputName="getComplianceScanSummaryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getComplianceScanSummary soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <scan xsi:type="xsd:anyType">?</scan>
      </ser:getComplianceScanSummary>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getComplianceScanSummaryRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getConfigBackupVOs" bindingOperationName="getConfigBackupVOs" type="Request-Response" outputName="getConfigBackupVOsResponse" inputName="getConfigBackupVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getConfigBackupVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getConfigBackupVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getConfigBackupVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getConfigurableVO" bindingOperationName="getConfigurableVO" type="Request-Response" outputName="getConfigurableVOResponse" inputName="getConfigurableVORequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getConfigurableVO soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getConfigurableVO>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getConfigurableVORequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getConfigurableVOs" bindingOperationName="getConfigurableVOs" type="Request-Response" outputName="getConfigurableVOsResponse" inputName="getConfigurableVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getConfigurableVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:getConfigurableVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getConfigurableVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttr" bindingOperationName="getCustAttr" type="Request-Response" outputName="getCustAttrResponse" inputName="getCustAttrRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://admin:opsware_admin@owc/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttr soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
         <useScope xsi:type="xsd:boolean">?</useScope>
      </ser:getCustAttr>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttrDetailLists" bindingOperationName="getCustAttrDetailLists" type="Request-Response" outputName="getCustAttrDetailListsResponse" inputName="getCustAttrDetailListsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttrDetailLists soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
         <keys xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         <scope xsi:type="soapenc:string">?</scope>
         <all xsi:type="xsd:boolean">?</all>
      </ser:getCustAttrDetailLists>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrDetailListsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttrKeys" bindingOperationName="getCustAttrKeys" type="Request-Response" outputName="getCustAttrKeysResponse" inputName="getCustAttrKeysRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttrKeys soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getCustAttrKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrKeysRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttrKeysNS" bindingOperationName="getCustAttrKeysNS" type="Request-Response" outputName="getCustAttrKeysResponse1" inputName="getCustAttrKeysRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttrKeysNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
      </ser:getCustAttrKeysNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrKeysRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttrNS" bindingOperationName="getCustAttrNS" type="Request-Response" outputName="getCustAttrResponse1" inputName="getCustAttrRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttrNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
         <useScope xsi:type="xsd:boolean">?</useScope>
      </ser:getCustAttrNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustAttrsWithRC" bindingOperationName="getCustAttrsWithRC" type="Request-Response" outputName="getCustAttrsWithRCResponse" inputName="getCustAttrsWithRCRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustAttrsWithRC soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getCustAttrsWithRC>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustAttrsWithRCRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomField" bindingOperationName="getCustomField" type="Request-Response" outputName="getCustomFieldResponse" inputName="getCustomFieldRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomField soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomField>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldDate" bindingOperationName="getCustomFieldDate" type="Request-Response" outputName="getCustomFieldDateResponse" inputName="getCustomFieldDateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldDate soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldDate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldDateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldDateNS" bindingOperationName="getCustomFieldDateNS" type="Request-Response" outputName="getCustomFieldDateResponse1" inputName="getCustomFieldDateRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldDateNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldDateNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldDateRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldLong" bindingOperationName="getCustomFieldLong" type="Request-Response" outputName="getCustomFieldLongResponse" inputName="getCustomFieldLongRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldLong soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldLong>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldLongRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldLongNS" bindingOperationName="getCustomFieldLongNS" type="Request-Response" outputName="getCustomFieldLongResponse1" inputName="getCustomFieldLongRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldLongNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldLongNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldLongRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldNS" bindingOperationName="getCustomFieldNS" type="Request-Response" outputName="getCustomFieldResponse1" inputName="getCustomFieldRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldString" bindingOperationName="getCustomFieldString" type="Request-Response" outputName="getCustomFieldStringResponse" inputName="getCustomFieldStringRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldString soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldString>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldStringRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldStringNS" bindingOperationName="getCustomFieldStringNS" type="Request-Response" outputName="getCustomFieldStringResponse1" inputName="getCustomFieldStringRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldStringNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldStringNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldStringRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldUnit" bindingOperationName="getCustomFieldUnit" type="Request-Response" outputName="getCustomFieldUnitResponse" inputName="getCustomFieldUnitRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldUnit soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldUnit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldUnitRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCustomFieldUnitNS" bindingOperationName="getCustomFieldUnitNS" type="Request-Response" outputName="getCustomFieldUnitResponse1" inputName="getCustomFieldUnitRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getCustomFieldUnitNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
      </ser:getCustomFieldUnitNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getCustomFieldUnitRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getDashboardTestResult" bindingOperationName="getDashboardTestResult" type="Request-Response" outputName="getDashboardTestResultResponse" inputName="getDashboardTestResultRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getDashboardTestResult soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <test xsi:type="com:DashboardTestRef" xmlns:com="http://compliance.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
         </test>
      </ser:getDashboardTestResult>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getDashboardTestResultRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getDashboardTestResultMatrix" bindingOperationName="getDashboardTestResultMatrix" type="Request-Response" outputName="getDashboardTestResultMatrixResponse" inputName="getDashboardTestResultMatrixRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getDashboardTestResultMatrix soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <tests xsi:type="ser:ArrayOf_tns16_DashboardTestRef" soapenc:arrayType="com:DashboardTestRef[]" xmlns:com="http://compliance.opsware.com"/>
      </ser:getDashboardTestResultMatrix>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getDashboardTestResultMatrixRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getDashboardTestResults" bindingOperationName="getDashboardTestResults" type="Request-Response" outputName="getDashboardTestResultsResponse1" inputName="getDashboardTestResultsRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getDashboardTestResults soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <tests xsi:type="ser:ArrayOf_tns16_DashboardTestRef" soapenc:arrayType="com:DashboardTestRef[]" xmlns:com="http://compliance.opsware.com"/>
      </ser:getDashboardTestResults>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getDashboardTestResultsRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getDeviceGroups" bindingOperationName="getDeviceGroups" type="Request-Response" outputName="getDeviceGroupsResponse" inputName="getDeviceGroupsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getDeviceGroups soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getDeviceGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getDeviceGroupsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getHostedManagers" bindingOperationName="getHostedManagers" type="Request-Response" outputName="getHostedManagersResponse" inputName="getHostedManagersRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getHostedManagers soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getHostedManagers>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getHostedManagersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getInstalledService" bindingOperationName="getInstalledService" type="Request-Response" outputName="getInstalledServiceResponse" inputName="getInstalledServiceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getInstalledService soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getInstalledService>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getInstalledServiceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getInstalledSoftware" bindingOperationName="getInstalledSoftware" type="Request-Response" outputName="getInstalledSoftwareResponse" inputName="getInstalledSoftwareRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getInstalledSoftware soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getInstalledSoftware>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getInstalledSoftwareRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getLogEntries" bindingOperationName="getLogEntries" type="Request-Response" outputName="getLogEntriesResponse" inputName="getLogEntriesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getLogEntries soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <begin xsi:type="xsd:dateTime">?</begin>
         <end xsi:type="xsd:dateTime">?</end>
         <ascending xsi:type="xsd:boolean">?</ascending>
      </ser:getLogEntries>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getLogEntriesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getManagers" bindingOperationName="getManagers" type="Request-Response" outputName="getManagersResponse" inputName="getManagersRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getManagers soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getManagers>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getManagersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getPhysicalDisks" bindingOperationName="getPhysicalDisks" type="Request-Response" outputName="getPhysicalDisksResponse" inputName="getPhysicalDisksRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getPhysicalDisks soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getPhysicalDisks>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getPhysicalDisksRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getPolicyAttachableStates" bindingOperationName="getPolicyAttachableStates" type="Request-Response" outputName="getPolicyAttachableStatesResponse" inputName="getPolicyAttachableStatesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getPolicyAttachableStates soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:getPolicyAttachableStates>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getPolicyAttachableStatesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getPorts" bindingOperationName="getPorts" type="Request-Response" outputName="getPortsResponse" inputName="getPortsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getPorts soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getPorts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getPortsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getProtocolControllers" bindingOperationName="getProtocolControllers" type="Request-Response" outputName="getProtocolControllersResponse" inputName="getProtocolControllersRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getProtocolControllers soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getProtocolControllers>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getProtocolControllersRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getScopedConfigurableVOs" bindingOperationName="getScopedConfigurableVOs" type="Request-Response" outputName="getScopedConfigurableVOsResponse" inputName="getScopedConfigurableVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getScopedConfigurableVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getScopedConfigurableVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getScopedConfigurableVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerHardwareVO" bindingOperationName="getServerHardwareVO" type="Request-Response" outputName="getServerHardwareVOResponse" inputName="getServerHardwareVORequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerHardwareVO soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getServerHardwareVO>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerHardwareVORequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerHardwareVOs" bindingOperationName="getServerHardwareVOs" type="Request-Response" outputName="getServerHardwareVOsResponse" inputName="getServerHardwareVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerHardwareVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:getServerHardwareVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerHardwareVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerStages" bindingOperationName="getServerStages" type="Request-Response" outputName="getServerStagesResponse" inputName="getServerStagesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerStages soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerStagesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerUses" bindingOperationName="getServerUses" type="Request-Response" outputName="getServerUsesResponse" inputName="getServerUsesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerUses soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerUsesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerVO" bindingOperationName="getServerVO" type="Request-Response" outputName="getServerVOResponse" inputName="getServerVORequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerVO soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getServerVO>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerVORequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getServerVOs" bindingOperationName="getServerVOs" type="Request-Response" outputName="getServerVOsResponse" inputName="getServerVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getServerVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:getServerVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getServerVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getSoftwarePolicies" bindingOperationName="getSoftwarePolicies" type="Request-Response" outputName="getSoftwarePoliciesResponse" inputName="getSoftwarePoliciesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getSoftwarePolicies soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:getSoftwarePolicies>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getSoftwarePoliciesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getSoftwarePolicyAssociations" bindingOperationName="getSoftwarePolicyAssociations" type="Request-Response" outputName="getSoftwarePolicyAssociationsResponse" inputName="getSoftwarePolicyAssociationsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getSoftwarePolicyAssociations soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getSoftwarePolicyAssociations>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getSoftwarePolicyAssociationsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getSoftwareRollbackPoints" bindingOperationName="getSoftwareRollbackPoints" type="Request-Response" outputName="getSoftwareRollbackPointsResponse" inputName="getSoftwareRollbackPointsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getSoftwareRollbackPoints soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getSoftwareRollbackPoints>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getSoftwareRollbackPointsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageAgents" bindingOperationName="getStorageAgents" type="Request-Response" outputName="getStorageAgentsResponse" inputName="getStorageAgentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageAgents soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getStorageAgents>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageAgentsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageConnectionInfoVOs" bindingOperationName="getStorageConnectionInfoVOs" type="Request-Response" outputName="getStorageConnectionInfoVOsResponse" inputName="getStorageConnectionInfoVOsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageConnectionInfoVOs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageConnectionInfoVOs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageConnectionInfoVOsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageConnectionInfoVOsByType" bindingOperationName="getStorageConnectionInfoVOsByType" type="Request-Response" outputName="getStorageConnectionInfoVOsResponse1" inputName="getStorageConnectionInfoVOsRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageConnectionInfoVOsByType soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <scannerType xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</scannerType>
      </ser:getStorageConnectionInfoVOsByType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageConnectionInfoVOsRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiator" bindingOperationName="getStorageInitiator" type="Request-Response" outputName="getStorageInitiatorResponse" inputName="getStorageInitiatorRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiator soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getStorageInitiator>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiators" bindingOperationName="getStorageInitiators" type="Request-Response" outputName="getStorageInitiatorsResponse" inputName="getStorageInitiatorsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiators soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageInitiators>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiatorServices" bindingOperationName="getStorageInitiatorServices" type="Request-Response" outputName="getStorageInitiatorServicesResponse" inputName="getStorageInitiatorServicesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiatorServices soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageInitiatorServices>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorServicesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiatorTargetViews" bindingOperationName="getStorageInitiatorTargetViews" type="Request-Response" outputName="getStorageInitiatorTargetViewsResponse" inputName="getStorageInitiatorTargetViewsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiatorTargetViews soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageInitiatorTargetViews>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorTargetViewsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiatorUnmountedVolumes" bindingOperationName="getStorageInitiatorUnmountedVolumes" type="Request-Response" outputName="getStorageInitiatorUnmountedVolumesResponse" inputName="getStorageInitiatorUnmountedVolumesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiatorUnmountedVolumes soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageInitiatorUnmountedVolumes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorUnmountedVolumesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageInitiatorVolumes" bindingOperationName="getStorageInitiatorVolumes" type="Request-Response" outputName="getStorageInitiatorVolumesResponse" inputName="getStorageInitiatorVolumesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageInitiatorVolumes soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageInitiatorVolumes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageInitiatorVolumesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageServices" bindingOperationName="getStorageServices" type="Request-Response" outputName="getStorageServicesResponse" inputName="getStorageServicesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageServices soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getStorageServices>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageServicesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageTargetInitiatorViews" bindingOperationName="getStorageTargetInitiatorViews" type="Request-Response" outputName="getStorageTargetInitiatorViewsResponse" inputName="getStorageTargetInitiatorViewsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageTargetInitiatorViews soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageTargetInitiatorViews>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageTargetInitiatorViewsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageTargets" bindingOperationName="getStorageTargets" type="Request-Response" outputName="getStorageTargetsResponse" inputName="getStorageTargetsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageTargets soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageTargets>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageTargetsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageTargetServices" bindingOperationName="getStorageTargetServices" type="Request-Response" outputName="getStorageTargetServicesResponse" inputName="getStorageTargetServicesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageTargetServices soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageTargetServices>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageTargetServicesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getStorageTargetVolumes" bindingOperationName="getStorageTargetVolumes" type="Request-Response" outputName="getStorageTargetVolumesResponse" inputName="getStorageTargetVolumesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getStorageTargetVolumes soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:getStorageTargetVolumes>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getStorageTargetVolumesRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getVirtualColumns" bindingOperationName="getVirtualColumns" type="Request-Response" outputName="getVirtualColumnsResponse" inputName="getVirtualColumnsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getVirtualColumns soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getVirtualColumnsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getVirtualColumnsNS" bindingOperationName="getVirtualColumnsNS" type="Request-Response" outputName="getVirtualColumnsResponse1" inputName="getVirtualColumnsRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getVirtualColumnsNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
      </ser:getVirtualColumnsNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getVirtualColumnsRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getVirtualServerRefs" bindingOperationName="getVirtualServerRefs" type="Request-Response" outputName="getVirtualServerRefsResponse" inputName="getVirtualServerRefsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getVirtualServerRefs soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:getVirtualServerRefs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/getVirtualServerRefsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="isStorageExtensionEnabled" bindingOperationName="isStorageExtensionEnabled" type="Request-Response" outputName="isStorageExtensionEnabledResponse" inputName="isStorageExtensionEnabledRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:isStorageExtensionEnabled soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:isStorageExtensionEnabled>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/isStorageExtensionEnabledRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="merge" bindingOperationName="merge" type="Request-Response" outputName="mergeResponse" inputName="mergeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:merge soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <sourceServerRef xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </sourceServerRef>
      </ser:merge>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/mergeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="modifiedSince" bindingOperationName="modifiedSince" type="Request-Response" outputName="modifiedSinceResponse" inputName="modifiedSinceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:modifiedSince soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <since xsi:type="xsd:dateTime">?</since>
      </ser:modifiedSince>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/modifiedSinceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="pushConfiguration" bindingOperationName="pushConfiguration" type="Request-Response" outputName="pushConfigurationResponse" inputName="pushConfigurationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:pushConfiguration soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:pushConfiguration>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/pushConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="readConfigBackupContents" bindingOperationName="readConfigBackupContents" type="Request-Response" outputName="readConfigBackupContentsResponse" inputName="readConfigBackupContentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:readConfigBackupContents soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <configBackupRef xsi:type="acm:ConfigBackupRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </configBackupRef>
         <readLiveFile xsi:type="xsd:boolean">?</readLiveFile>
      </ser:readConfigBackupContents>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/readConfigBackupContentsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="readConfigFile" bindingOperationName="readConfigFile" type="Request-Response" outputName="readConfigFileResponse" inputName="readConfigFileRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:readConfigFile soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <path xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</path>
         <encoding xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</encoding>
      </ser:readConfigFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/readConfigFileRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="remove" bindingOperationName="remove" type="Request-Response" outputName="removeResponse" inputName="removeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:remove soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
      </ser:remove>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="removeConfigBackups" bindingOperationName="removeConfigBackups" type="Request-Response" outputName="removeConfigBackupsResponse" inputName="removeConfigBackupsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:removeConfigBackups soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <appInst xsi:type="acm:ApplicationInstanceRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
         </appInst>
         <startDate xsi:type="xsd:dateTime">?</startDate>
         <endDate xsi:type="xsd:dateTime">?</endDate>
      </ser:removeConfigBackups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeConfigBackupsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="removeCustAttr" bindingOperationName="removeCustAttr" type="Request-Response" outputName="removeCustAttrResponse" inputName="removeCustAttrRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:removeCustAttr soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
      </ser:removeCustAttr>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeCustAttrRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="removeCustAttrNS" bindingOperationName="removeCustAttrNS" type="Request-Response" outputName="removeCustAttrResponse1" inputName="removeCustAttrRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:removeCustAttrNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
      </ser:removeCustAttrNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeCustAttrRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="removeDeviceGroups" bindingOperationName="removeDeviceGroups" type="Request-Response" outputName="removeDeviceGroupsResponse" inputName="removeDeviceGroupsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:removeDeviceGroups soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long">?</idAsLong>
            <name xsi:type="soapenc:string">?</name>
            <secureResourceTypeName xsi:type="soapenc:string">?</secureResourceTypeName>
         </self>
         <groups xsi:type="ser:ArrayOf_tns5_DeviceGroupRef" soapenc:arrayType="dev:DeviceGroupRef[]" xmlns:dev="http://device.opsware.com"/>
      </ser:removeDeviceGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeDeviceGroupsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="removeStorageConnectionInfo" bindingOperationName="removeStorageConnectionInfo" type="Request-Response" outputName="removeStorageConnectionInfoResponse" inputName="removeStorageConnectionInfoRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:removeStorageConnectionInfo soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <storageConnectionInfo xsi:type="stor:StorageConnectionInfoRef" xmlns:stor="http://storage.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
         </storageConnectionInfo>
      </ser:removeStorageConnectionInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/removeStorageConnectionInfoRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="restoreConfiguration" bindingOperationName="restoreConfiguration" type="Request-Response" outputName="restoreConfigurationResponse1" inputName="restoreConfigurationRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:restoreConfiguration soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <backup xsi:type="acm:ConfigBackupRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </backup>
      </ser:restoreConfiguration>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/restoreConfigurationRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="restoreConfiguration2" bindingOperationName="restoreConfiguration2" type="Request-Response" outputName="restoreConfigurationResponse" inputName="restoreConfigurationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:restoreConfiguration2 soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <backup xsi:type="acm:ConfigBackupRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </backup>
         <restoreType xsi:type="xsd:int">?</restoreType>
      </ser:restoreConfiguration2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/restoreConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="runAgentCommTest" bindingOperationName="runAgentCommTest" type="Request-Response" outputName="runAgentCommTestResponse" inputName="runAgentCommTestRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:runAgentCommTest soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:runAgentCommTest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/runAgentCommTestRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="scanConfiguration" bindingOperationName="scanConfiguration" type="Request-Response" outputName="scanConfigurationResponse" inputName="scanConfigurationRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:scanConfiguration soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
      </ser:scanConfiguration>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/scanConfigurationRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="scanConfigurations" bindingOperationName="scanConfigurations" type="Request-Response" outputName="scanConfigurationsResponse" inputName="scanConfigurationsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:scanConfigurations soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
      </ser:scanConfigurations>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/scanConfigurationsRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setCustAttr" bindingOperationName="setCustAttr" type="Request-Response" outputName="setCustAttrResponse" inputName="setCustAttrRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setCustAttr soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
         <value xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</value>
      </ser:setCustAttr>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setCustAttrRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setCustAttrNS" bindingOperationName="setCustAttrNS" type="Request-Response" outputName="setCustAttrResponse1" inputName="setCustAttrRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setCustAttrNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <key xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</key>
         <value xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</value>
      </ser:setCustAttrNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setCustAttrRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setCustomer" bindingOperationName="setCustomer" type="Request-Response" outputName="setCustomerResponse" inputName="setCustomerRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setCustomer soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <customer xsi:type="loc:CustomerRef" xmlns:loc="http://locality.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </customer>
      </ser:setCustomer>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setCustomerRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setCustomField" bindingOperationName="setCustomField" type="Request-Response" outputName="setCustomFieldResponse" inputName="setCustomFieldRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setCustomField soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
         <value xsi:type="xsd:anyType">?</value>
      </ser:setCustomField>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setCustomFieldRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setCustomFieldNS" bindingOperationName="setCustomFieldNS" type="Request-Response" outputName="setCustomFieldResponse4" inputName="setCustomFieldRequest4" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setCustomFieldNS soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <namespace xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</namespace>
         <fieldName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</fieldName>
         <value xsi:type="xsd:anyType">?</value>
      </ser:setCustomFieldNS>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setCustomFieldRequest4"/></con:call></con:operation><con:operation isOneWay="false" action="" name="setPrimaryInterface" bindingOperationName="setPrimaryInterface" type="Request-Response" outputName="setPrimaryInterfaceResponse" inputName="setPrimaryInterfaceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:setPrimaryInterface soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <slot xsi:type="xsd:int">?</slot>
      </ser:setPrimaryInterface>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/setPrimaryInterfaceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startConfigurationPush" bindingOperationName="startConfigurationPush" type="Request-Response" outputName="startConfigurationPushResponse" inputName="startConfigurationPushRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startConfigurationPush soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <instName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</instName>
         <userTag xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <onFailureOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <onSuccessOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startConfigurationPush>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startConfigurationPushRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startConfigurationRestore" bindingOperationName="startConfigurationRestore" type="Request-Response" outputName="startConfigurationRestoreResponse1" inputName="startConfigurationRestoreRequest1" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startConfigurationRestore soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <backup xsi:type="acm:ConfigBackupRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </backup>
      </ser:startConfigurationRestore>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startConfigurationRestoreRequest1"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startConfigurationRestore2" bindingOperationName="startConfigurationRestore2" type="Request-Response" outputName="startConfigurationRestoreResponse" inputName="startConfigurationRestoreRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startConfigurationRestore2 soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <backup xsi:type="acm:ConfigBackupRef" xmlns:acm="http://acm.opsware.com">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </backup>
         <restoreType xsi:type="xsd:int">?</restoreType>
      </ser:startConfigurationRestore2>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startConfigurationRestoreRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startConfigurationScan" bindingOperationName="startConfigurationScan" type="Request-Response" outputName="startConfigurationScanResponse" inputName="startConfigurationScanRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startConfigurationScan soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOfServerRef" soapenc:arrayType="ser:ServerRef[]"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startConfigurationScan>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startConfigurationScanRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startFullRemediateNow" bindingOperationName="startFullRemediateNow" type="Request-Response" outputName="startFullRemediateNowResponse" inputName="startFullRemediateNowRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startFullRemediateNow soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
      </ser:startFullRemediateNow>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startFullRemediateNowRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startInstallSoftware" bindingOperationName="startInstallSoftware" type="Request-Response" outputName="startInstallSoftwareResponse" inputName="startInstallSoftwareRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startInstallSoftware soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <installables xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startInstallSoftware>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startInstallSoftwareRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startInstallSoftwarePolicyTemplateNow" bindingOperationName="startInstallSoftwarePolicyTemplateNow" type="Request-Response" outputName="startInstallSoftwarePolicyTemplateNowResponse" inputName="startInstallSoftwarePolicyTemplateNowRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startInstallSoftwarePolicyTemplateNow soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <policies xsi:type="ser:ArrayOf_tns8_SoftwarePolicyRef" soapenc:arrayType="swm:SoftwarePolicyRef[]" xmlns:swm="http://swmgmt.opsware.com"/>
      </ser:startInstallSoftwarePolicyTemplateNow>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startInstallSoftwarePolicyTemplateNowRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startOSSequence" bindingOperationName="startOSSequence" type="Request-Response" outputName="startOSSequenceResponse" inputName="startOSSequenceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startOSSequence soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <params xsi:type="osp:OSSequenceJobParams" xmlns:osp="http://osprov.opsware.com">
            <OSSequence xsi:type="osp:OSSequenceRef">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </OSSequence>
            <customer xsi:type="loc:CustomerRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </customer>
            <preserveNetwork xsi:type="xsd:boolean">?</preserveNetwork>
            <reprovision xsi:type="xsd:boolean">?</reprovision>
            <skipCustomerUpdate xsi:type="xsd:boolean">?</skipCustomerUpdate>
            <timeout xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</timeout>
         </params>
         <userTag xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <onFailureOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <onSuccessOwner xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startOSSequence>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startOSSequenceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startReboot" bindingOperationName="startReboot" type="Request-Response" outputName="startRebootResponse" inputName="startRebootRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startReboot soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startReboot>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startRebootRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startRemediate" bindingOperationName="startRemediate" type="Request-Response" outputName="startRemediateResponse" inputName="startRemediateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startRemediate soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <policies xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startRemediate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startRemediateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startRemediateNow" bindingOperationName="startRemediateNow" type="Request-Response" outputName="startRemediateNowResponse" inputName="startRemediateNowRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startRemediateNow soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <policies xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:startRemediateNow>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startRemediateNowRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startScanPatchPolicyCompliance" bindingOperationName="startScanPatchPolicyCompliance" type="Request-Response" outputName="startScanPatchPolicyComplianceResponse" inputName="startScanPatchPolicyComplianceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startScanPatchPolicyCompliance soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:startScanPatchPolicyCompliance>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startScanPatchPolicyComplianceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startScanSoftwarePolicyCompliance" bindingOperationName="startScanSoftwarePolicyCompliance" type="Request-Response" outputName="startScanSoftwarePolicyComplianceResponse" inputName="startScanSoftwarePolicyComplianceRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startScanSoftwarePolicyCompliance soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <selves xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
      </ser:startScanSoftwarePolicyCompliance>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startScanSoftwarePolicyComplianceRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startUninstallPackage" bindingOperationName="startUninstallPackage" type="Request-Response" outputName="startUninstallPackageResponse" inputName="startUninstallPackageRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startUninstallPackage soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <packageInfos xsi:type="ser:ArrayOf_tns8_PackageInfo" soapenc:arrayType="swm:PackageInfo[]" xmlns:swm="http://swmgmt.opsware.com"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startUninstallPackage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startUninstallPackageRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="startUninstallSoftware" bindingOperationName="startUninstallSoftware" type="Request-Response" outputName="startUninstallSoftwareResponse" inputName="startUninstallSoftwareRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:startUninstallSoftware soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <installables xsi:type="ser:ArrayOf_xsd_anyType" soapenc:arrayType="xsd:anyType[]"/>
         <userTag xsi:type="soapenc:string">?</userTag>
         <notification xsi:type="job:JobNotification" xmlns:job="http://job.opsware.com">
            <onCancelOwner xsi:type="soapenc:string">?</onCancelOwner>
            <onCancelRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onFailureOwner xsi:type="soapenc:string">?</onFailureOwner>
            <onFailureRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <onSuccessOwner xsi:type="soapenc:string">?</onSuccessOwner>
            <onSuccessRecipients xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
         </notification>
         <schedule xsi:type="job:JobSchedule" xmlns:job="http://job.opsware.com">
            <startDate xsi:type="xsd:dateTime">?</startDate>
         </schedule>
      </ser:startUninstallSoftware>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/startUninstallSoftwareRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="update" bindingOperationName="update" type="Request-Response" outputName="updateResponse" inputName="updateRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:update soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="ser:ServerRef">
            <id xsi:type="xsd:long">?</id>
            <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
         </self>
         <vo xsi:type="ser:ServerVO">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <description xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</description>
            <hostName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</hostName>
            <manufacturer xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</manufacturer>
            <model xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</model>
            <osVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osVersion>
            <primaryIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</primaryIP>
            <serialNumber xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</serialNumber>
            <agentVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</agentVersion>
            <codeset xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</codeset>
            <customer xsi:type="loc:CustomerRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </customer>
            <defaultGw xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</defaultGw>
            <discoveredDate xsi:type="xsd:dateTime">?</discoveredDate>
            <facility xsi:type="loc:FacilityRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </facility>
            <firstDetectDate xsi:type="xsd:dateTime">?</firstDetectDate>
            <hypervisor xsi:type="xsd:boolean">?</hypervisor>
            <lastScanDate xsi:type="xsd:dateTime">?</lastScanDate>
            <locale xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</locale>
            <lockInfo xsi:type="ser:LockInfo">
               <comment xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</comment>
               <date xsi:type="xsd:dateTime">?</date>
               <locked xsi:type="xsd:boolean">?</locked>
               <user xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</user>
            </lockInfo>
            <loopbackIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</loopbackIP>
            <managementIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</managementIP>
            <mid xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</mid>
            <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            <netBIOSName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</netBIOSName>
            <opswLifecycle xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</opswLifecycle>
            <origin xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</origin>
            <osFlavor xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osFlavor>
            <osSPVersion xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</osSPVersion>
            <peerIP xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</peerIP>
            <platform xsi:type="dev:PlatformRef" xmlns:dev="http://device.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </platform>
            <powerState xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</powerState>
            <previousSWRegDate xsi:type="xsd:dateTime">?</previousSWRegDate>
            <realm xsi:type="loc:RealmRef" xmlns:loc="http://locality.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
               <secureResourceTypeName xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</secureResourceTypeName>
            </realm>
            <rebootRequired xsi:type="xsd:boolean">?</rebootRequired>
            <reporting xsi:type="xsd:boolean">?</reporting>
            <stage xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</stage>
            <state xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</state>
            <use xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</use>
            <virtualizationType xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</virtualizationType>
         </vo>
         <force xsi:type="xsd:boolean">?</force>
         <refetch xsi:type="xsd:boolean">?</refetch>
      </ser:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/updateRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateConfigurable" bindingOperationName="updateConfigurable" type="Request-Response" outputName="updateConfigurableResponse" inputName="updateConfigurableRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:updateConfigurable soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <vo xsi:type="acm:ConfigurableVO" xmlns:acm="http://acm.opsware.com">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long">?</idAsLong>
               <name xsi:type="soapenc:string">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <instances xsi:type="ser:ArrayOf_tns12_ApplicationInstanceVO" soapenc:arrayType="acm:ApplicationInstanceVO[]"/>
            <valueset xsi:type="acm:ValueSet">
               <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]"/>
               <empty xsi:type="xsd:boolean">?</empty>
               <modifiedBy xsi:type="soapenc:string">?</modifiedBy>
               <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            </valueset>
         </vo>
         <force xsi:type="xsd:boolean">?</force>
         <refetch xsi:type="xsd:boolean">?</refetch>
      </ser:updateConfigurable>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/updateConfigurableRequest"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateStorageConnectionInfo" bindingOperationName="updateStorageConnectionInfo" type="Request-Response" outputName="updateStorageConnectionInfoResponse" inputName="updateStorageConnectionInfoRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ci-000C2954DFE0:9080/osapi/com/opsware/server/ServerService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://server.opsware.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:updateStorageConnectionInfo soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
         <self xsi:type="xsd:anyType">?</self>
         <vo xsi:type="stor:StorageConnectionInfoVO" xmlns:stor="http://storage.opsware.com">
            <ref xsi:type="com:ObjRef" xmlns:com="http://common.opsware.com">
               <id xsi:type="xsd:long">?</id>
               <idAsLong xsi:type="soapenc:long" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</idAsLong>
               <name xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</name>
            </ref>
            <createdBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</createdBy>
            <createdDate xsi:type="xsd:dateTime">?</createdDate>
            <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
            <logChange xsi:type="xsd:boolean">?</logChange>
            <modifiedBy xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</modifiedBy>
            <modifiedDate xsi:type="xsd:dateTime">?</modifiedDate>
            <template xsi:type="stor:ConnectionInfoTemplate">
               <text xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</text>
               <type xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</type>
               <version xsi:type="soapenc:string" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">?</version>
            </template>
            <values xsi:type="com:ModifiableMap" xmlns:com="http://common.opsware.com">
               <dirtyAttributes xsi:type="ser:ArrayOf_soapenc_string" soapenc:arrayType="soapenc:string[]" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"/>
               <empty xsi:type="xsd:boolean">?</empty>
            </values>
         </vo>
         <force xsi:type="xsd:boolean">?</force>
         <refetch xsi:type="xsd:boolean">?</refetch>
      </ser:updateStorageConnectionInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.opsware.com/ServerService/updateStorageConnectionInfoRequest"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/></con:soapui-project>